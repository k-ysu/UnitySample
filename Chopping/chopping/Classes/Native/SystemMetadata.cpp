#include "il2cpp-config.h"
#include "class-internals.h"
#include "codegen/il2cpp-codegen.h"
#include <cstring>
#include <string.h>
#include <stdio.h>
#ifndef _MSC_VER
#include <alloca.h>
#else
#include <malloc.h>
#endif
#include <cmath>
#include <limits>
#include <assert.h>
#include "stringLiterals.h"

extern TypeInfo U3CModuleU3E_t478_il2cpp_TypeInfo;
// <Module>
#include "System_U3CModuleU3E.h"
extern TypeInfo Locale_t479_il2cpp_TypeInfo;
// Locale
#include "System_Locale.h"
extern TypeInfo MonoTODOAttribute_t480_il2cpp_TypeInfo;
// System.MonoTODOAttribute
#include "System_System_MonoTODOAttribute.h"
extern TypeInfo GeneratedCodeAttribute_t397_il2cpp_TypeInfo;
// System.CodeDom.Compiler.GeneratedCodeAttribute
#include "System_System_CodeDom_Compiler_GeneratedCodeAttribute.h"
extern TypeInfo Enumerator_t709_il2cpp_TypeInfo;
extern TypeInfo Stack_1_t708_il2cpp_TypeInfo;
extern TypeInfo HybridDictionary_t483_il2cpp_TypeInfo;
// System.Collections.Specialized.HybridDictionary
#include "System_System_Collections_Specialized_HybridDictionary.h"
extern TypeInfo DictionaryNode_t484_il2cpp_TypeInfo;
// System.Collections.Specialized.ListDictionary/DictionaryNode
#include "System_System_Collections_Specialized_ListDictionary_Diction.h"
extern TypeInfo DictionaryNodeEnumerator_t485_il2cpp_TypeInfo;
// System.Collections.Specialized.ListDictionary/DictionaryNodeEnumerator
#include "System_System_Collections_Specialized_ListDictionary_Diction_0.h"
extern TypeInfo ListDictionary_t482_il2cpp_TypeInfo;
// System.Collections.Specialized.ListDictionary
#include "System_System_Collections_Specialized_ListDictionary.h"
extern TypeInfo _Item_t487_il2cpp_TypeInfo;
// System.Collections.Specialized.NameObjectCollectionBase/_Item
#include "System_System_Collections_Specialized_NameObjectCollectionBa.h"
extern TypeInfo _KeysEnumerator_t489_il2cpp_TypeInfo;
// System.Collections.Specialized.NameObjectCollectionBase/_KeysEnumerator
#include "System_System_Collections_Specialized_NameObjectCollectionBa_0.h"
extern TypeInfo KeysCollection_t490_il2cpp_TypeInfo;
// System.Collections.Specialized.NameObjectCollectionBase/KeysCollection
#include "System_System_Collections_Specialized_NameObjectCollectionBa_1.h"
extern TypeInfo NameObjectCollectionBase_t488_il2cpp_TypeInfo;
// System.Collections.Specialized.NameObjectCollectionBase
#include "System_System_Collections_Specialized_NameObjectCollectionBa_2.h"
extern TypeInfo NameValueCollection_t494_il2cpp_TypeInfo;
// System.Collections.Specialized.NameValueCollection
#include "System_System_Collections_Specialized_NameValueCollection.h"
extern TypeInfo DefaultValueAttribute_t393_il2cpp_TypeInfo;
// System.ComponentModel.DefaultValueAttribute
#include "System_System_ComponentModel_DefaultValueAttribute.h"
extern TypeInfo EditorBrowsableAttribute_t390_il2cpp_TypeInfo;
// System.ComponentModel.EditorBrowsableAttribute
#include "System_System_ComponentModel_EditorBrowsableAttribute.h"
extern TypeInfo EditorBrowsableState_t495_il2cpp_TypeInfo;
// System.ComponentModel.EditorBrowsableState
#include "System_System_ComponentModel_EditorBrowsableState.h"
extern TypeInfo TypeConverter_t496_il2cpp_TypeInfo;
// System.ComponentModel.TypeConverter
#include "System_System_ComponentModel_TypeConverter.h"
extern TypeInfo TypeConverterAttribute_t497_il2cpp_TypeInfo;
// System.ComponentModel.TypeConverterAttribute
#include "System_System_ComponentModel_TypeConverterAttribute.h"
extern TypeInfo AuthenticationLevel_t498_il2cpp_TypeInfo;
// System.Net.Security.AuthenticationLevel
#include "System_System_Net_Security_AuthenticationLevel.h"
extern TypeInfo SslPolicyErrors_t499_il2cpp_TypeInfo;
// System.Net.Security.SslPolicyErrors
#include "System_System_Net_Security_SslPolicyErrors.h"
extern TypeInfo AddressFamily_t500_il2cpp_TypeInfo;
// System.Net.Sockets.AddressFamily
#include "System_System_Net_Sockets_AddressFamily.h"
extern TypeInfo DefaultCertificatePolicy_t501_il2cpp_TypeInfo;
// System.Net.DefaultCertificatePolicy
#include "System_System_Net_DefaultCertificatePolicy.h"
extern TypeInfo FileWebRequest_t504_il2cpp_TypeInfo;
// System.Net.FileWebRequest
#include "System_System_Net_FileWebRequest.h"
extern TypeInfo FileWebRequestCreator_t506_il2cpp_TypeInfo;
// System.Net.FileWebRequestCreator
#include "System_System_Net_FileWebRequestCreator.h"
extern TypeInfo FtpRequestCreator_t507_il2cpp_TypeInfo;
// System.Net.FtpRequestCreator
#include "System_System_Net_FtpRequestCreator.h"
extern TypeInfo FtpWebRequest_t509_il2cpp_TypeInfo;
// System.Net.FtpWebRequest
#include "System_System_Net_FtpWebRequest.h"
extern TypeInfo GlobalProxySelection_t510_il2cpp_TypeInfo;
// System.Net.GlobalProxySelection
#include "System_System_Net_GlobalProxySelection.h"
extern TypeInfo HttpRequestCreator_t511_il2cpp_TypeInfo;
// System.Net.HttpRequestCreator
#include "System_System_Net_HttpRequestCreator.h"
extern TypeInfo HttpVersion_t513_il2cpp_TypeInfo;
// System.Net.HttpVersion
#include "System_System_Net_HttpVersion.h"
extern TypeInfo HttpWebRequest_t516_il2cpp_TypeInfo;
// System.Net.HttpWebRequest
#include "System_System_Net_HttpWebRequest.h"
extern TypeInfo ICertificatePolicy_t522_il2cpp_TypeInfo;
extern TypeInfo ICredentials_t526_il2cpp_TypeInfo;
extern TypeInfo IPAddress_t518_il2cpp_TypeInfo;
// System.Net.IPAddress
#include "System_System_Net_IPAddress.h"
extern TypeInfo IPv6Address_t519_il2cpp_TypeInfo;
// System.Net.IPv6Address
#include "System_System_Net_IPv6Address.h"
extern TypeInfo IWebProxy_t503_il2cpp_TypeInfo;
extern TypeInfo IWebRequestCreate_t710_il2cpp_TypeInfo;
extern TypeInfo SecurityProtocolType_t520_il2cpp_TypeInfo;
// System.Net.SecurityProtocolType
#include "System_System_Net_SecurityProtocolType.h"
extern TypeInfo ServicePoint_t515_il2cpp_TypeInfo;
// System.Net.ServicePoint
#include "System_System_Net_ServicePoint.h"
extern TypeInfo SPKey_t521_il2cpp_TypeInfo;
// System.Net.ServicePointManager/SPKey
#include "System_System_Net_ServicePointManager_SPKey.h"
extern TypeInfo ServicePointManager_t523_il2cpp_TypeInfo;
// System.Net.ServicePointManager
#include "System_System_Net_ServicePointManager.h"
extern TypeInfo WebHeaderCollection_t502_il2cpp_TypeInfo;
// System.Net.WebHeaderCollection
#include "System_System_Net_WebHeaderCollection.h"
extern TypeInfo WebProxy_t527_il2cpp_TypeInfo;
// System.Net.WebProxy
#include "System_System_Net_WebProxy.h"
extern TypeInfo WebRequest_t505_il2cpp_TypeInfo;
// System.Net.WebRequest
#include "System_System_Net_WebRequest.h"
extern TypeInfo OpenFlags_t529_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.OpenFlags
#include "System_System_Security_Cryptography_X509Certificates_OpenFla.h"
extern TypeInfo PublicKey_t533_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.PublicKey
#include "System_System_Security_Cryptography_X509Certificates_PublicK.h"
extern TypeInfo StoreLocation_t534_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.StoreLocation
#include "System_System_Security_Cryptography_X509Certificates_StoreLo.h"
extern TypeInfo StoreName_t535_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.StoreName
#include "System_System_Security_Cryptography_X509Certificates_StoreNa.h"
extern TypeInfo X500DistinguishedName_t536_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X500DistinguishedName
#include "System_System_Security_Cryptography_X509Certificates_X500Dis.h"
extern TypeInfo X500DistinguishedNameFlags_t537_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags
#include "System_System_Security_Cryptography_X509Certificates_X500Dis_0.h"
extern TypeInfo X509BasicConstraintsExtension_t538_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension
#include "System_System_Security_Cryptography_X509Certificates_X509Bas.h"
extern TypeInfo X509Certificate2_t542_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System_System_Security_Cryptography_X509Certificates_X509Cer.h"
extern TypeInfo X509Certificate2Collection_t544_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509Certificate2Collection
#include "System_System_Security_Cryptography_X509Certificates_X509Cer_0.h"
extern TypeInfo X509Certificate2Enumerator_t545_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator
#include "System_System_Security_Cryptography_X509Certificates_X509Cer_2.h"
extern TypeInfo X509CertificateEnumerator_t546_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509CertificateCollection/X509CertificateEnumerator
#include "System_System_Security_Cryptography_X509Certificates_X509Cer_3.h"
extern TypeInfo X509CertificateCollection_t514_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System_System_Security_Cryptography_X509Certificates_X509Cer_1.h"
extern TypeInfo X509Chain_t554_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509Chain
#include "System_System_Security_Cryptography_X509Certificates_X509Cha.h"
extern TypeInfo X509ChainElement_t552_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509ChainElement
#include "System_System_Security_Cryptography_X509Certificates_X509Cha_0.h"
extern TypeInfo X509ChainElementCollection_t548_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509ChainElementCollection
#include "System_System_Security_Cryptography_X509Certificates_X509Cha_2.h"
extern TypeInfo X509ChainElementEnumerator_t555_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509ChainElementEnumerator
#include "System_System_Security_Cryptography_X509Certificates_X509Cha_3.h"
extern TypeInfo X509ChainPolicy_t549_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509ChainPolicy
#include "System_System_Security_Cryptography_X509Certificates_X509Cha_4.h"
extern TypeInfo X509ChainStatus_t551_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509ChainStatus
#include "System_System_Security_Cryptography_X509Certificates_X509Cha_5.h"
extern TypeInfo X509ChainStatusFlags_t558_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509ChainStatusFlags
#include "System_System_Security_Cryptography_X509Certificates_X509Cha_1.h"
extern TypeInfo X509EnhancedKeyUsageExtension_t559_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension
#include "System_System_Security_Cryptography_X509Certificates_X509Enh.h"
extern TypeInfo X509Extension_t539_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509Extension
#include "System_System_Security_Cryptography_X509Certificates_X509Ext.h"
extern TypeInfo X509ExtensionCollection_t540_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509ExtensionCollection
#include "System_System_Security_Cryptography_X509Certificates_X509Ext_0.h"
extern TypeInfo X509ExtensionEnumerator_t560_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509ExtensionEnumerator
#include "System_System_Security_Cryptography_X509Certificates_X509Ext_1.h"
extern TypeInfo X509FindType_t561_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509FindType
#include "System_System_Security_Cryptography_X509Certificates_X509Fin.h"
extern TypeInfo X509KeyUsageExtension_t562_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509KeyUsageExtension
#include "System_System_Security_Cryptography_X509Certificates_X509Key.h"
extern TypeInfo X509KeyUsageFlags_t563_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509KeyUsageFlags
#include "System_System_Security_Cryptography_X509Certificates_X509Key_0.h"
extern TypeInfo X509NameType_t564_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509NameType
#include "System_System_Security_Cryptography_X509Certificates_X509Nam.h"
extern TypeInfo X509RevocationFlag_t565_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509RevocationFlag
#include "System_System_Security_Cryptography_X509Certificates_X509Rev.h"
extern TypeInfo X509RevocationMode_t566_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509RevocationMode
#include "System_System_Security_Cryptography_X509Certificates_X509Rev_0.h"
extern TypeInfo X509Store_t553_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509Store
#include "System_System_Security_Cryptography_X509Certificates_X509Sto.h"
extern TypeInfo X509SubjectKeyIdentifierExtension_t568_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension
#include "System_System_Security_Cryptography_X509Certificates_X509Sub.h"
extern TypeInfo X509SubjectKeyIdentifierHashAlgorithm_t569_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm
#include "System_System_Security_Cryptography_X509Certificates_X509Sub_0.h"
extern TypeInfo X509VerificationFlags_t570_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509VerificationFlags
#include "System_System_Security_Cryptography_X509Certificates_X509Ver.h"
extern TypeInfo AsnDecodeStatus_t571_il2cpp_TypeInfo;
// System.Security.Cryptography.AsnDecodeStatus
#include "System_System_Security_Cryptography_AsnDecodeStatus.h"
extern TypeInfo AsnEncodedData_t531_il2cpp_TypeInfo;
// System.Security.Cryptography.AsnEncodedData
#include "System_System_Security_Cryptography_AsnEncodedData.h"
extern TypeInfo Oid_t532_il2cpp_TypeInfo;
// System.Security.Cryptography.Oid
#include "System_System_Security_Cryptography_Oid.h"
extern TypeInfo OidCollection_t556_il2cpp_TypeInfo;
// System.Security.Cryptography.OidCollection
#include "System_System_Security_Cryptography_OidCollection.h"
extern TypeInfo OidEnumerator_t572_il2cpp_TypeInfo;
// System.Security.Cryptography.OidEnumerator
#include "System_System_Security_Cryptography_OidEnumerator.h"
extern TypeInfo MatchAppendEvaluator_t574_il2cpp_TypeInfo;
// System.Text.RegularExpressions.BaseMachine/MatchAppendEvaluator
#include "System_System_Text_RegularExpressions_BaseMachine_MatchAppen.h"
extern TypeInfo BaseMachine_t575_il2cpp_TypeInfo;
// System.Text.RegularExpressions.BaseMachine
#include "System_System_Text_RegularExpressions_BaseMachine.h"
extern TypeInfo Capture_t576_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Capture
#include "System_System_Text_RegularExpressions_Capture.h"
extern TypeInfo CaptureCollection_t578_il2cpp_TypeInfo;
// System.Text.RegularExpressions.CaptureCollection
#include "System_System_Text_RegularExpressions_CaptureCollection.h"
extern TypeInfo Group_t579_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Group
#include "System_System_Text_RegularExpressions_Group.h"
extern TypeInfo GroupCollection_t581_il2cpp_TypeInfo;
// System.Text.RegularExpressions.GroupCollection
#include "System_System_Text_RegularExpressions_GroupCollection.h"
extern TypeInfo Match_t573_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Match
#include "System_System_Text_RegularExpressions_Match.h"
extern TypeInfo Enumerator_t584_il2cpp_TypeInfo;
// System.Text.RegularExpressions.MatchCollection/Enumerator
#include "System_System_Text_RegularExpressions_MatchCollection_Enumer.h"
extern TypeInfo MatchCollection_t583_il2cpp_TypeInfo;
// System.Text.RegularExpressions.MatchCollection
#include "System_System_Text_RegularExpressions_MatchCollection.h"
extern TypeInfo Regex_t380_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Regex
#include "System_System_Text_RegularExpressions_Regex.h"
extern TypeInfo RegexOptions_t590_il2cpp_TypeInfo;
// System.Text.RegularExpressions.RegexOptions
#include "System_System_Text_RegularExpressions_RegexOptions.h"
extern TypeInfo OpCode_t591_il2cpp_TypeInfo;
// System.Text.RegularExpressions.OpCode
#include "System_System_Text_RegularExpressions_OpCode.h"
extern TypeInfo OpFlags_t592_il2cpp_TypeInfo;
// System.Text.RegularExpressions.OpFlags
#include "System_System_Text_RegularExpressions_OpFlags.h"
extern TypeInfo Position_t593_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Position
#include "System_System_Text_RegularExpressions_Position.h"
extern TypeInfo IMachine_t582_il2cpp_TypeInfo;
extern TypeInfo IMachineFactory_t586_il2cpp_TypeInfo;
extern TypeInfo Key_t594_il2cpp_TypeInfo;
// System.Text.RegularExpressions.FactoryCache/Key
#include "System_System_Text_RegularExpressions_FactoryCache_Key.h"
extern TypeInfo FactoryCache_t585_il2cpp_TypeInfo;
// System.Text.RegularExpressions.FactoryCache
#include "System_System_Text_RegularExpressions_FactoryCache.h"
extern TypeInfo Node_t596_il2cpp_TypeInfo;
// System.Text.RegularExpressions.MRUList/Node
#include "System_System_Text_RegularExpressions_MRUList_Node.h"
extern TypeInfo MRUList_t595_il2cpp_TypeInfo;
// System.Text.RegularExpressions.MRUList
#include "System_System_Text_RegularExpressions_MRUList.h"
extern TypeInfo Category_t597_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Category
#include "System_System_Text_RegularExpressions_Category.h"
extern TypeInfo CategoryUtils_t598_il2cpp_TypeInfo;
// System.Text.RegularExpressions.CategoryUtils
#include "System_System_Text_RegularExpressions_CategoryUtils.h"
extern TypeInfo LinkRef_t599_il2cpp_TypeInfo;
// System.Text.RegularExpressions.LinkRef
#include "System_System_Text_RegularExpressions_LinkRef.h"
extern TypeInfo ICompiler_t662_il2cpp_TypeInfo;
extern TypeInfo InterpreterFactory_t600_il2cpp_TypeInfo;
// System.Text.RegularExpressions.InterpreterFactory
#include "System_System_Text_RegularExpressions_InterpreterFactory.h"
extern TypeInfo Link_t601_il2cpp_TypeInfo;
// System.Text.RegularExpressions.PatternCompiler/PatternLinkStack/Link
#include "System_System_Text_RegularExpressions_PatternCompiler_Patter.h"
extern TypeInfo PatternLinkStack_t602_il2cpp_TypeInfo;
// System.Text.RegularExpressions.PatternCompiler/PatternLinkStack
#include "System_System_Text_RegularExpressions_PatternCompiler_Patter_0.h"
extern TypeInfo PatternCompiler_t604_il2cpp_TypeInfo;
// System.Text.RegularExpressions.PatternCompiler
#include "System_System_Text_RegularExpressions_PatternCompiler.h"
extern TypeInfo LinkStack_t603_il2cpp_TypeInfo;
// System.Text.RegularExpressions.LinkStack
#include "System_System_Text_RegularExpressions_LinkStack.h"
extern TypeInfo Mark_t605_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Mark
#include "System_System_Text_RegularExpressions_Mark.h"
extern TypeInfo IntStack_t606_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Interpreter/IntStack
#include "System_System_Text_RegularExpressions_Interpreter_IntStack.h"
extern TypeInfo RepeatContext_t607_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Interpreter/RepeatContext
#include "System_System_Text_RegularExpressions_Interpreter_RepeatCont.h"
extern TypeInfo Mode_t608_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Interpreter/Mode
#include "System_System_Text_RegularExpressions_Interpreter_Mode.h"
extern TypeInfo Interpreter_t611_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Interpreter
#include "System_System_Text_RegularExpressions_Interpreter.h"
extern TypeInfo Interval_t612_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Interval
#include "System_System_Text_RegularExpressions_Interval.h"
extern TypeInfo Enumerator_t613_il2cpp_TypeInfo;
// System.Text.RegularExpressions.IntervalCollection/Enumerator
#include "System_System_Text_RegularExpressions_IntervalCollection_Enu.h"
extern TypeInfo CostDelegate_t614_il2cpp_TypeInfo;
// System.Text.RegularExpressions.IntervalCollection/CostDelegate
#include "System_System_Text_RegularExpressions_IntervalCollection_Cos.h"
extern TypeInfo IntervalCollection_t615_il2cpp_TypeInfo;
// System.Text.RegularExpressions.IntervalCollection
#include "System_System_Text_RegularExpressions_IntervalCollection.h"
extern TypeInfo Parser_t616_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.Parser
#include "System_System_Text_RegularExpressions_Syntax_Parser.h"
extern TypeInfo QuickSearch_t609_il2cpp_TypeInfo;
// System.Text.RegularExpressions.QuickSearch
#include "System_System_Text_RegularExpressions_QuickSearch.h"
extern TypeInfo ReplacementEvaluator_t617_il2cpp_TypeInfo;
// System.Text.RegularExpressions.ReplacementEvaluator
#include "System_System_Text_RegularExpressions_ReplacementEvaluator.h"
extern TypeInfo ExpressionCollection_t618_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.ExpressionCollection
#include "System_System_Text_RegularExpressions_Syntax_ExpressionColle.h"
extern TypeInfo Expression_t619_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.Expression
#include "System_System_Text_RegularExpressions_Syntax_Expression.h"
extern TypeInfo CompositeExpression_t620_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.CompositeExpression
#include "System_System_Text_RegularExpressions_Syntax_CompositeExpres.h"
extern TypeInfo Group_t621_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.Group
#include "System_System_Text_RegularExpressions_Syntax_Group.h"
extern TypeInfo RegularExpression_t622_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.RegularExpression
#include "System_System_Text_RegularExpressions_Syntax_RegularExpressi.h"
extern TypeInfo CapturingGroup_t623_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.CapturingGroup
#include "System_System_Text_RegularExpressions_Syntax_CapturingGroup.h"
extern TypeInfo BalancingGroup_t624_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.BalancingGroup
#include "System_System_Text_RegularExpressions_Syntax_BalancingGroup.h"
extern TypeInfo NonBacktrackingGroup_t625_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.NonBacktrackingGroup
#include "System_System_Text_RegularExpressions_Syntax_NonBacktracking.h"
extern TypeInfo Repetition_t626_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.Repetition
#include "System_System_Text_RegularExpressions_Syntax_Repetition.h"
extern TypeInfo Assertion_t627_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.Assertion
#include "System_System_Text_RegularExpressions_Syntax_Assertion.h"
extern TypeInfo CaptureAssertion_t630_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.CaptureAssertion
#include "System_System_Text_RegularExpressions_Syntax_CaptureAssertio.h"
extern TypeInfo ExpressionAssertion_t628_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.ExpressionAssertion
#include "System_System_Text_RegularExpressions_Syntax_ExpressionAsser.h"
extern TypeInfo Alternation_t631_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.Alternation
#include "System_System_Text_RegularExpressions_Syntax_Alternation.h"
extern TypeInfo Literal_t629_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.Literal
#include "System_System_Text_RegularExpressions_Syntax_Literal.h"
extern TypeInfo PositionAssertion_t632_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.PositionAssertion
#include "System_System_Text_RegularExpressions_Syntax_PositionAsserti.h"
extern TypeInfo Reference_t633_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.Reference
#include "System_System_Text_RegularExpressions_Syntax_Reference.h"
extern TypeInfo BackslashNumber_t634_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.BackslashNumber
#include "System_System_Text_RegularExpressions_Syntax_BackslashNumber.h"
extern TypeInfo CharacterClass_t636_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.CharacterClass
#include "System_System_Text_RegularExpressions_Syntax_CharacterClass.h"
extern TypeInfo AnchorInfo_t637_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.AnchorInfo
#include "System_System_Text_RegularExpressions_Syntax_AnchorInfo.h"
extern TypeInfo DefaultUriParser_t638_il2cpp_TypeInfo;
// System.DefaultUriParser
#include "System_System_DefaultUriParser.h"
extern TypeInfo GenericUriParser_t640_il2cpp_TypeInfo;
// System.GenericUriParser
#include "System_System_GenericUriParser.h"
extern TypeInfo UriScheme_t641_il2cpp_TypeInfo;
// System.Uri/UriScheme
#include "System_System_Uri_UriScheme.h"
extern TypeInfo Uri_t184_il2cpp_TypeInfo;
// System.Uri
#include "System_System_Uri.h"
extern TypeInfo UriFormatException_t643_il2cpp_TypeInfo;
// System.UriFormatException
#include "System_System_UriFormatException.h"
extern TypeInfo UriHostNameType_t644_il2cpp_TypeInfo;
// System.UriHostNameType
#include "System_System_UriHostNameType.h"
extern TypeInfo UriKind_t645_il2cpp_TypeInfo;
// System.UriKind
#include "System_System_UriKind.h"
extern TypeInfo UriParser_t639_il2cpp_TypeInfo;
// System.UriParser
#include "System_System_UriParser.h"
extern TypeInfo UriPartial_t646_il2cpp_TypeInfo;
// System.UriPartial
#include "System_System_UriPartial.h"
extern TypeInfo UriTypeConverter_t647_il2cpp_TypeInfo;
// System.UriTypeConverter
#include "System_System_UriTypeConverter.h"
extern TypeInfo RemoteCertificateValidationCallback_t508_il2cpp_TypeInfo;
// System.Net.Security.RemoteCertificateValidationCallback
#include "System_System_Net_Security_RemoteCertificateValidationCallba.h"
extern TypeInfo MatchEvaluator_t648_il2cpp_TypeInfo;
// System.Text.RegularExpressions.MatchEvaluator
#include "System_System_Text_RegularExpressions_MatchEvaluator.h"
extern TypeInfo U24ArrayTypeU24128_t649_il2cpp_TypeInfo;
// <PrivateImplementationDetails>/$ArrayType$128
#include "System_U3CPrivateImplementationDetailsU3E_U24ArrayTypeU24128.h"
extern TypeInfo U24ArrayTypeU2412_t650_il2cpp_TypeInfo;
// <PrivateImplementationDetails>/$ArrayType$12
#include "System_U3CPrivateImplementationDetailsU3E_U24ArrayTypeU2412.h"
extern TypeInfo U3CPrivateImplementationDetailsU3E_t651_il2cpp_TypeInfo;
// <PrivateImplementationDetails>
#include "System_U3CPrivateImplementationDetailsU3E.h"
#include <map>
struct TypeInfo;
struct MethodInfo;
TypeInfo* g_System_Assembly_Types[159] = 
{
	&U3CModuleU3E_t478_il2cpp_TypeInfo,
	&Locale_t479_il2cpp_TypeInfo,
	&MonoTODOAttribute_t480_il2cpp_TypeInfo,
	&GeneratedCodeAttribute_t397_il2cpp_TypeInfo,
	&Enumerator_t709_il2cpp_TypeInfo,
	&Stack_1_t708_il2cpp_TypeInfo,
	&HybridDictionary_t483_il2cpp_TypeInfo,
	&DictionaryNode_t484_il2cpp_TypeInfo,
	&DictionaryNodeEnumerator_t485_il2cpp_TypeInfo,
	&ListDictionary_t482_il2cpp_TypeInfo,
	&_Item_t487_il2cpp_TypeInfo,
	&_KeysEnumerator_t489_il2cpp_TypeInfo,
	&KeysCollection_t490_il2cpp_TypeInfo,
	&NameObjectCollectionBase_t488_il2cpp_TypeInfo,
	&NameValueCollection_t494_il2cpp_TypeInfo,
	&DefaultValueAttribute_t393_il2cpp_TypeInfo,
	&EditorBrowsableAttribute_t390_il2cpp_TypeInfo,
	&EditorBrowsableState_t495_il2cpp_TypeInfo,
	&TypeConverter_t496_il2cpp_TypeInfo,
	&TypeConverterAttribute_t497_il2cpp_TypeInfo,
	&AuthenticationLevel_t498_il2cpp_TypeInfo,
	&SslPolicyErrors_t499_il2cpp_TypeInfo,
	&AddressFamily_t500_il2cpp_TypeInfo,
	&DefaultCertificatePolicy_t501_il2cpp_TypeInfo,
	&FileWebRequest_t504_il2cpp_TypeInfo,
	&FileWebRequestCreator_t506_il2cpp_TypeInfo,
	&FtpRequestCreator_t507_il2cpp_TypeInfo,
	&FtpWebRequest_t509_il2cpp_TypeInfo,
	&GlobalProxySelection_t510_il2cpp_TypeInfo,
	&HttpRequestCreator_t511_il2cpp_TypeInfo,
	&HttpVersion_t513_il2cpp_TypeInfo,
	&HttpWebRequest_t516_il2cpp_TypeInfo,
	&ICertificatePolicy_t522_il2cpp_TypeInfo,
	&ICredentials_t526_il2cpp_TypeInfo,
	&IPAddress_t518_il2cpp_TypeInfo,
	&IPv6Address_t519_il2cpp_TypeInfo,
	&IWebProxy_t503_il2cpp_TypeInfo,
	&IWebRequestCreate_t710_il2cpp_TypeInfo,
	&SecurityProtocolType_t520_il2cpp_TypeInfo,
	&ServicePoint_t515_il2cpp_TypeInfo,
	&SPKey_t521_il2cpp_TypeInfo,
	&ServicePointManager_t523_il2cpp_TypeInfo,
	&WebHeaderCollection_t502_il2cpp_TypeInfo,
	&WebProxy_t527_il2cpp_TypeInfo,
	&WebRequest_t505_il2cpp_TypeInfo,
	&OpenFlags_t529_il2cpp_TypeInfo,
	&PublicKey_t533_il2cpp_TypeInfo,
	&StoreLocation_t534_il2cpp_TypeInfo,
	&StoreName_t535_il2cpp_TypeInfo,
	&X500DistinguishedName_t536_il2cpp_TypeInfo,
	&X500DistinguishedNameFlags_t537_il2cpp_TypeInfo,
	&X509BasicConstraintsExtension_t538_il2cpp_TypeInfo,
	&X509Certificate2_t542_il2cpp_TypeInfo,
	&X509Certificate2Collection_t544_il2cpp_TypeInfo,
	&X509Certificate2Enumerator_t545_il2cpp_TypeInfo,
	&X509CertificateEnumerator_t546_il2cpp_TypeInfo,
	&X509CertificateCollection_t514_il2cpp_TypeInfo,
	&X509Chain_t554_il2cpp_TypeInfo,
	&X509ChainElement_t552_il2cpp_TypeInfo,
	&X509ChainElementCollection_t548_il2cpp_TypeInfo,
	&X509ChainElementEnumerator_t555_il2cpp_TypeInfo,
	&X509ChainPolicy_t549_il2cpp_TypeInfo,
	&X509ChainStatus_t551_il2cpp_TypeInfo,
	&X509ChainStatusFlags_t558_il2cpp_TypeInfo,
	&X509EnhancedKeyUsageExtension_t559_il2cpp_TypeInfo,
	&X509Extension_t539_il2cpp_TypeInfo,
	&X509ExtensionCollection_t540_il2cpp_TypeInfo,
	&X509ExtensionEnumerator_t560_il2cpp_TypeInfo,
	&X509FindType_t561_il2cpp_TypeInfo,
	&X509KeyUsageExtension_t562_il2cpp_TypeInfo,
	&X509KeyUsageFlags_t563_il2cpp_TypeInfo,
	&X509NameType_t564_il2cpp_TypeInfo,
	&X509RevocationFlag_t565_il2cpp_TypeInfo,
	&X509RevocationMode_t566_il2cpp_TypeInfo,
	&X509Store_t553_il2cpp_TypeInfo,
	&X509SubjectKeyIdentifierExtension_t568_il2cpp_TypeInfo,
	&X509SubjectKeyIdentifierHashAlgorithm_t569_il2cpp_TypeInfo,
	&X509VerificationFlags_t570_il2cpp_TypeInfo,
	&AsnDecodeStatus_t571_il2cpp_TypeInfo,
	&AsnEncodedData_t531_il2cpp_TypeInfo,
	&Oid_t532_il2cpp_TypeInfo,
	&OidCollection_t556_il2cpp_TypeInfo,
	&OidEnumerator_t572_il2cpp_TypeInfo,
	&MatchAppendEvaluator_t574_il2cpp_TypeInfo,
	&BaseMachine_t575_il2cpp_TypeInfo,
	&Capture_t576_il2cpp_TypeInfo,
	&CaptureCollection_t578_il2cpp_TypeInfo,
	&Group_t579_il2cpp_TypeInfo,
	&GroupCollection_t581_il2cpp_TypeInfo,
	&Match_t573_il2cpp_TypeInfo,
	&Enumerator_t584_il2cpp_TypeInfo,
	&MatchCollection_t583_il2cpp_TypeInfo,
	&Regex_t380_il2cpp_TypeInfo,
	&RegexOptions_t590_il2cpp_TypeInfo,
	&OpCode_t591_il2cpp_TypeInfo,
	&OpFlags_t592_il2cpp_TypeInfo,
	&Position_t593_il2cpp_TypeInfo,
	&IMachine_t582_il2cpp_TypeInfo,
	&IMachineFactory_t586_il2cpp_TypeInfo,
	&Key_t594_il2cpp_TypeInfo,
	&FactoryCache_t585_il2cpp_TypeInfo,
	&Node_t596_il2cpp_TypeInfo,
	&MRUList_t595_il2cpp_TypeInfo,
	&Category_t597_il2cpp_TypeInfo,
	&CategoryUtils_t598_il2cpp_TypeInfo,
	&LinkRef_t599_il2cpp_TypeInfo,
	&ICompiler_t662_il2cpp_TypeInfo,
	&InterpreterFactory_t600_il2cpp_TypeInfo,
	&Link_t601_il2cpp_TypeInfo,
	&PatternLinkStack_t602_il2cpp_TypeInfo,
	&PatternCompiler_t604_il2cpp_TypeInfo,
	&LinkStack_t603_il2cpp_TypeInfo,
	&Mark_t605_il2cpp_TypeInfo,
	&IntStack_t606_il2cpp_TypeInfo,
	&RepeatContext_t607_il2cpp_TypeInfo,
	&Mode_t608_il2cpp_TypeInfo,
	&Interpreter_t611_il2cpp_TypeInfo,
	&Interval_t612_il2cpp_TypeInfo,
	&Enumerator_t613_il2cpp_TypeInfo,
	&CostDelegate_t614_il2cpp_TypeInfo,
	&IntervalCollection_t615_il2cpp_TypeInfo,
	&Parser_t616_il2cpp_TypeInfo,
	&QuickSearch_t609_il2cpp_TypeInfo,
	&ReplacementEvaluator_t617_il2cpp_TypeInfo,
	&ExpressionCollection_t618_il2cpp_TypeInfo,
	&Expression_t619_il2cpp_TypeInfo,
	&CompositeExpression_t620_il2cpp_TypeInfo,
	&Group_t621_il2cpp_TypeInfo,
	&RegularExpression_t622_il2cpp_TypeInfo,
	&CapturingGroup_t623_il2cpp_TypeInfo,
	&BalancingGroup_t624_il2cpp_TypeInfo,
	&NonBacktrackingGroup_t625_il2cpp_TypeInfo,
	&Repetition_t626_il2cpp_TypeInfo,
	&Assertion_t627_il2cpp_TypeInfo,
	&CaptureAssertion_t630_il2cpp_TypeInfo,
	&ExpressionAssertion_t628_il2cpp_TypeInfo,
	&Alternation_t631_il2cpp_TypeInfo,
	&Literal_t629_il2cpp_TypeInfo,
	&PositionAssertion_t632_il2cpp_TypeInfo,
	&Reference_t633_il2cpp_TypeInfo,
	&BackslashNumber_t634_il2cpp_TypeInfo,
	&CharacterClass_t636_il2cpp_TypeInfo,
	&AnchorInfo_t637_il2cpp_TypeInfo,
	&DefaultUriParser_t638_il2cpp_TypeInfo,
	&GenericUriParser_t640_il2cpp_TypeInfo,
	&UriScheme_t641_il2cpp_TypeInfo,
	&Uri_t184_il2cpp_TypeInfo,
	&UriFormatException_t643_il2cpp_TypeInfo,
	&UriHostNameType_t644_il2cpp_TypeInfo,
	&UriKind_t645_il2cpp_TypeInfo,
	&UriParser_t639_il2cpp_TypeInfo,
	&UriPartial_t646_il2cpp_TypeInfo,
	&UriTypeConverter_t647_il2cpp_TypeInfo,
	&RemoteCertificateValidationCallback_t508_il2cpp_TypeInfo,
	&MatchEvaluator_t648_il2cpp_TypeInfo,
	&U24ArrayTypeU24128_t649_il2cpp_TypeInfo,
	&U24ArrayTypeU2412_t650_il2cpp_TypeInfo,
	&U3CPrivateImplementationDetailsU3E_t651_il2cpp_TypeInfo,
	NULL,
};
extern Il2CppImage g_System_dll_Image;
Il2CppAssembly g_System_Assembly = 
{
	{ "System", NULL, NULL, "\x0\x24\x0\x0\x4\x80\x0\x0\x94\x0\x0\x0\x6\x2\x0\x0\x0\x24\x0\x0\x52\x53\x41\x31\x0\x4\x0\x0\x1\x0\x1\x0\x8D\x56\xC7\x6F\x9E\x86\x49\x38\x30\x49\xF3\x83\xC4\x4B\xE0\xEC\x20\x41\x81\x82\x2A\x6C\x31\xCF\x5E\xB7\xEF\x48\x69\x44\xD0\x32\x18\x8E\xA1\xD3\x92\x7\x63\x71\x2C\xCB\x12\xD7\x5F\xB7\x7E\x98\x11\x14\x9E\x61\x48\xE5\xD3\x2F\xBA\xAB\x37\x61\x1C\x18\x78\xDD\xC1\x9E\x20\xEF\x13\x5D\xC\xB2\xCF\xF2\xBF\xEC\x3D\x11\x58\x10\xC3\xD9\x6\x96\x38\xFE\x4B\xE2\x15\xDB\xF7\x95\x86\x19\x20\xE5\xAB\x6F\x7D\xB2\xE2\xCE\xEF\x13\x6A\xC2\x3D\x5D\xD2\xBF\x3\x17\x0\xAE\xC2\x32\xF6\xC6\xB1\xC7\x85\xB4\x30\x5C\x12\x3B\x37\xAB", { 0x7C, 0xEC, 0x85, 0xD7, 0xBE, 0xA7, 0x79, 0x8E }, 32772, 0, 1, 2, 0, 5, 0 },
	&g_System_dll_Image,
	1,
};
extern const CustomAttributesCacheGenerator g_System_Assembly_AttributeGenerators[75];
static const char* s_StringTable[675] = 
{
	"comment",
	"tool",
	"version",
	"parent",
	"idx",
	"_version",
	"_array",
	"_size",
	"caseInsensitive",
	"hashtable",
	"list",
	"key",
	"value",
	"next",
	"dict",
	"isAtStart",
	"current",
	"count",
	"head",
	"comparer",
	"m_collection",
	"m_position",
	"m_ItemsContainer",
	"m_NullKeyItem",
	"m_ItemsArray",
	"m_hashprovider",
	"m_comparer",
	"m_defCapacity",
	"m_readonly",
	"infoCopy",
	"keyscoll",
	"equality_comparer",
	"cachedAllKeys",
	"cachedAll",
	"DefaultValue",
	"state",
	"value__",
	"Always",
	"Never",
	"Advanced",
	"Default",
	"converter_type",
	"None",
	"MutualAuthRequested",
	"MutualAuthRequired",
	"RemoteCertificateNotAvailable",
	"RemoteCertificateNameMismatch",
	"RemoteCertificateChainErrors",
	"Unknown",
	"Unspecified",
	"Unix",
	"InterNetwork",
	"ImpLink",
	"Pup",
	"Chaos",
	"NS",
	"Ipx",
	"Iso",
	"Osi",
	"Ecma",
	"DataKit",
	"Ccitt",
	"Sna",
	"DecNet",
	"DataLink",
	"Lat",
	"HyperChannel",
	"AppleTalk",
	"NetBios",
	"VoiceView",
	"FireFox",
	"Banyan",
	"Atm",
	"InterNetworkV6",
	"Cluster",
	"Ieee12844",
	"Irda",
	"NetworkDesigners",
	"Max",
	"uri",
	"webHeaders",
	"connectionGroup",
	"contentLength",
	"fileAccess",
	"method",
	"proxy",
	"preAuthenticate",
	"timeout",
	"requestUri",
	"rwTimeout",
	"binary",
	"usePassive",
	"locker",
	"supportedCommands",
	"callback",
	"<>f__am$cache1C",
	"Version10",
	"Version11",
	"actualUri",
	"hostChanged",
	"allowAutoRedirect",
	"allowBuffering",
	"certificates",
	"keepAlive",
	"maxAutoRedirect",
	"mediaType",
	"initialMethod",
	"pipelined",
	"sendChunked",
	"servicePoint",
	"redirects",
	"defaultMaxResponseHeadersLength",
	"readWriteTimeout",
	"m_Address",
	"m_Family",
	"m_Numbers",
	"m_ScopeId",
	"Any",
	"Broadcast",
	"Loopback",
	"IPv6Any",
	"IPv6Loopback",
	"IPv6None",
	"address",
	"prefixLength",
	"scopeId",
	"Ssl3",
	"Tls",
	"connectionLimit",
	"maxIdleTime",
	"currentConnections",
	"idleSince",
	"usesProxy",
	"sendContinue",
	"useConnect",
	"hostE",
	"useNagle",
	"use_connect",
	"servicePoints",
	"policy",
	"defaultConnectionLimit",
	"maxServicePointIdleTime",
	"maxServicePoints",
	"_checkCRL",
	"_securityProtocol",
	"expectContinue",
	"server_cert_cb",
	"restricted",
	"multiValue",
	"restricted_response",
	"internallyCreated",
	"allowed_chars",
	"bypassOnLocal",
	"bypassList",
	"credentials",
	"useDefaultCredentials",
	"prefixes",
	"isDefaultWebProxySet",
	"defaultWebProxy",
	"authentication_level",
	"lockobj",
	"ReadOnly",
	"ReadWrite",
	"MaxAllowed",
	"OpenExistingOnly",
	"IncludeArchived",
	"_key",
	"_keyValue",
	"_params",
	"_oid",
	"<>f__switch$map9",
	"CurrentUser",
	"LocalMachine",
	"AddressBook",
	"AuthRoot",
	"CertificateAuthority",
	"Disallowed",
	"My",
	"Root",
	"TrustedPeople",
	"TrustedPublisher",
	"name",
	"Reversed",
	"UseSemicolons",
	"DoNotUsePlusSign",
	"DoNotUseQuotes",
	"UseCommas",
	"UseNewLines",
	"UseUTF8Encoding",
	"UseT61Encoding",
	"ForceUTF8Encoding",
	"oid",
	"friendlyName",
	"_certificateAuthority",
	"_hasPathLengthConstraint",
	"_pathLengthConstraint",
	"_status",
	"_archived",
	"_extensions",
	"_name",
	"_serial",
	"_publicKey",
	"issuer_name",
	"subject_name",
	"signature_algorithm",
	"_cert",
	"empty_error",
	"commonName",
	"email",
	"signedData",
	"enumerator",
	"location",
	"elements",
	"status",
	"Empty",
	"max_path_length",
	"working_issuer_name",
	"working_public_key",
	"bce_restriction",
	"roots",
	"cas",
	"collection",
	"<>f__switch$mapB",
	"<>f__switch$mapC",
	"<>f__switch$mapD",
	"certificate",
	"info",
	"compressed_status_flags",
	"_list",
	"apps",
	"cert",
	"store",
	"rflag",
	"mode",
	"vflags",
	"vtime",
	"NoError",
	"NotTimeValid",
	"NotTimeNested",
	"Revoked",
	"NotSignatureValid",
	"NotValidForUsage",
	"UntrustedRoot",
	"RevocationStatusUnknown",
	"Cyclic",
	"InvalidExtension",
	"InvalidPolicyConstraints",
	"InvalidBasicConstraints",
	"InvalidNameConstraints",
	"HasNotSupportedNameConstraint",
	"HasNotDefinedNameConstraint",
	"HasNotPermittedNameConstraint",
	"HasExcludedNameConstraint",
	"PartialChain",
	"CtlNotTimeValid",
	"CtlNotSignatureValid",
	"CtlNotValidForUsage",
	"OfflineRevocation",
	"NoIssuanceChainPolicy",
	"_enhKeyUsage",
	"<>f__switch$mapE",
	"_critical",
	"FindByThumbprint",
	"FindBySubjectName",
	"FindBySubjectDistinguishedName",
	"FindByIssuerName",
	"FindByIssuerDistinguishedName",
	"FindBySerialNumber",
	"FindByTimeValid",
	"FindByTimeNotYetValid",
	"FindByTimeExpired",
	"FindByTemplateName",
	"FindByApplicationPolicy",
	"FindByCertificatePolicy",
	"FindByExtension",
	"FindByKeyUsage",
	"FindBySubjectKeyIdentifier",
	"all",
	"_keyUsages",
	"EncipherOnly",
	"CrlSign",
	"KeyCertSign",
	"KeyAgreement",
	"DataEncipherment",
	"KeyEncipherment",
	"NonRepudiation",
	"DigitalSignature",
	"DecipherOnly",
	"SimpleName",
	"EmailName",
	"UpnName",
	"DnsName",
	"DnsFromAlternativeName",
	"UrlName",
	"EndCertificateOnly",
	"EntireChain",
	"ExcludeRoot",
	"NoCheck",
	"Online",
	"Offline",
	"_location",
	"_flags",
	"<>f__switch$mapF",
	"_subjectKeyIdentifier",
	"_ski",
	"Sha1",
	"ShortSha1",
	"CapiSha1",
	"NoFlag",
	"IgnoreNotTimeValid",
	"IgnoreCtlNotTimeValid",
	"IgnoreNotTimeNested",
	"IgnoreInvalidBasicConstraints",
	"AllowUnknownCertificateAuthority",
	"IgnoreWrongUsage",
	"IgnoreInvalidName",
	"IgnoreInvalidPolicy",
	"IgnoreEndRevocationUnknown",
	"IgnoreCtlSignerRevocationUnknown",
	"IgnoreCertificateAuthorityRevocationUnknown",
	"IgnoreRootRevocationUnknown",
	"AllFlags",
	"NotDecoded",
	"Ok",
	"BadAsn",
	"BadTag",
	"BadLength",
	"InformationNotAvailable",
	"_raw",
	"<>f__switch$mapA",
	"_value",
	"<>f__switch$map10",
	"_readOnly",
	"_collection",
	"_position",
	"needs_groups_or_captures",
	"index",
	"length",
	"text",
	"Fail",
	"success",
	"captures",
	"gap",
	"regex",
	"machine",
	"text_length",
	"groups",
	"empty",
	"coll",
	"cache",
	"machineFactory",
	"mapping",
	"group_count",
	"refsInitialized",
	"group_names",
	"group_numbers",
	"pattern",
	"roptions",
	"capnames",
	"caps",
	"capsize",
	"capslist",
	"IgnoreCase",
	"Multiline",
	"ExplicitCapture",
	"Singleline",
	"IgnorePatternWhitespace",
	"RightToLeft",
	"ECMAScript",
	"CultureInvariant",
	"False",
	"True",
	"Position",
	"String",
	"Reference",
	"Character",
	"Category",
	"NotCategory",
	"Range",
	"Set",
	"In",
	"Open",
	"Close",
	"Balance",
	"BalanceStart",
	"IfDefined",
	"Sub",
	"Test",
	"Branch",
	"Jump",
	"Repeat",
	"Until",
	"FastRepeat",
	"Anchor",
	"Info",
	"Negate",
	"Lazy",
	"Start",
	"StartOfString",
	"StartOfLine",
	"StartOfScan",
	"End",
	"EndOfString",
	"EndOfLine",
	"Boundary",
	"NonBoundary",
	"options",
	"capacity",
	"factories",
	"mru_list",
	"previous",
	"tail",
	"AnySingleline",
	"Word",
	"Digit",
	"WhiteSpace",
	"EcmaAny",
	"EcmaAnySingleline",
	"EcmaWord",
	"EcmaDigit",
	"EcmaWhiteSpace",
	"UnicodeL",
	"UnicodeM",
	"UnicodeN",
	"UnicodeZ",
	"UnicodeP",
	"UnicodeS",
	"UnicodeC",
	"UnicodeLu",
	"UnicodeLl",
	"UnicodeLt",
	"UnicodeLm",
	"UnicodeLo",
	"UnicodeMn",
	"UnicodeMe",
	"UnicodeMc",
	"UnicodeNd",
	"UnicodeNl",
	"UnicodeNo",
	"UnicodeZs",
	"UnicodeZl",
	"UnicodeZp",
	"UnicodePd",
	"UnicodePs",
	"UnicodePi",
	"UnicodePe",
	"UnicodePf",
	"UnicodePc",
	"UnicodePo",
	"UnicodeSm",
	"UnicodeSc",
	"UnicodeSk",
	"UnicodeSo",
	"UnicodeCc",
	"UnicodeCf",
	"UnicodeCo",
	"UnicodeCs",
	"UnicodeCn",
	"UnicodeBasicLatin",
	"UnicodeLatin1Supplement",
	"UnicodeLatinExtendedA",
	"UnicodeLatinExtendedB",
	"UnicodeIPAExtensions",
	"UnicodeSpacingModifierLetters",
	"UnicodeCombiningDiacriticalMarks",
	"UnicodeGreek",
	"UnicodeCyrillic",
	"UnicodeArmenian",
	"UnicodeHebrew",
	"UnicodeArabic",
	"UnicodeSyriac",
	"UnicodeThaana",
	"UnicodeDevanagari",
	"UnicodeBengali",
	"UnicodeGurmukhi",
	"UnicodeGujarati",
	"UnicodeOriya",
	"UnicodeTamil",
	"UnicodeTelugu",
	"UnicodeKannada",
	"UnicodeMalayalam",
	"UnicodeSinhala",
	"UnicodeThai",
	"UnicodeLao",
	"UnicodeTibetan",
	"UnicodeMyanmar",
	"UnicodeGeorgian",
	"UnicodeHangulJamo",
	"UnicodeEthiopic",
	"UnicodeCherokee",
	"UnicodeUnifiedCanadianAboriginalSyllabics",
	"UnicodeOgham",
	"UnicodeRunic",
	"UnicodeKhmer",
	"UnicodeMongolian",
	"UnicodeLatinExtendedAdditional",
	"UnicodeGreekExtended",
	"UnicodeGeneralPunctuation",
	"UnicodeSuperscriptsandSubscripts",
	"UnicodeCurrencySymbols",
	"UnicodeCombiningMarksforSymbols",
	"UnicodeLetterlikeSymbols",
	"UnicodeNumberForms",
	"UnicodeArrows",
	"UnicodeMathematicalOperators",
	"UnicodeMiscellaneousTechnical",
	"UnicodeControlPictures",
	"UnicodeOpticalCharacterRecognition",
	"UnicodeEnclosedAlphanumerics",
	"UnicodeBoxDrawing",
	"UnicodeBlockElements",
	"UnicodeGeometricShapes",
	"UnicodeMiscellaneousSymbols",
	"UnicodeDingbats",
	"UnicodeBraillePatterns",
	"UnicodeCJKRadicalsSupplement",
	"UnicodeKangxiRadicals",
	"UnicodeIdeographicDescriptionCharacters",
	"UnicodeCJKSymbolsandPunctuation",
	"UnicodeHiragana",
	"UnicodeKatakana",
	"UnicodeBopomofo",
	"UnicodeHangulCompatibilityJamo",
	"UnicodeKanbun",
	"UnicodeBopomofoExtended",
	"UnicodeEnclosedCJKLettersandMonths",
	"UnicodeCJKCompatibility",
	"UnicodeCJKUnifiedIdeographsExtensionA",
	"UnicodeCJKUnifiedIdeographs",
	"UnicodeYiSyllables",
	"UnicodeYiRadicals",
	"UnicodeHangulSyllables",
	"UnicodeHighSurrogates",
	"UnicodeHighPrivateUseSurrogates",
	"UnicodeLowSurrogates",
	"UnicodePrivateUse",
	"UnicodeCJKCompatibilityIdeographs",
	"UnicodeAlphabeticPresentationForms",
	"UnicodeArabicPresentationFormsA",
	"UnicodeCombiningHalfMarks",
	"UnicodeCJKCompatibilityForms",
	"UnicodeSmallFormVariants",
	"UnicodeArabicPresentationFormsB",
	"UnicodeSpecials",
	"UnicodeHalfwidthandFullwidthForms",
	"UnicodeOldItalic",
	"UnicodeGothic",
	"UnicodeDeseret",
	"UnicodeByzantineMusicalSymbols",
	"UnicodeMusicalSymbols",
	"UnicodeMathematicalAlphanumericSymbols",
	"UnicodeCJKUnifiedIdeographsExtensionB",
	"UnicodeCJKCompatibilityIdeographsSupplement",
	"UnicodeTags",
	"LastValue",
	"namesMapping",
	"base_addr",
	"offset_addr",
	"link",
	"pgm",
	"stack",
	"Previous",
	"values",
	"start",
	"min",
	"max",
	"lazy",
	"expr_pc",
	"Search",
	"Match",
	"Count",
	"program",
	"program_start",
	"text_end",
	"match_min",
	"qs",
	"scan_ptr",
	"repeat",
	"fast",
	"deep",
	"marks",
	"mark_start",
	"mark_end",
	"low",
	"high",
	"contiguous",
	"ptr",
	"intervals",
	"refs",
	"num_groups",
	"str",
	"len",
	"ignore",
	"reverse",
	"shift",
	"shiftExtended",
	"THRESHOLD",
	"n_pieces",
	"pieces",
	"replacement",
	"expressions",
	"gid",
	"balance",
	"alternate",
	"group",
	"literal",
	"negate",
	"pos",
	"ecma",
	"upper_case_characters",
	"pos_cats",
	"neg_cats",
	"expr",
	"offset",
	"width",
	"scheme",
	"delimiter",
	"defaultPort",
	"MaxUriLength",
	"isUnixFilePath",
	"source",
	"host",
	"port",
	"path",
	"query",
	"fragment",
	"userinfo",
	"isUnc",
	"isOpaquePart",
	"isAbsoluteUri",
	"segments",
	"userEscaped",
	"cachedAbsoluteUri",
	"cachedToString",
	"cachedLocalPath",
	"cachedHashCode",
	"hexUpperChars",
	"SchemeDelimiter",
	"UriSchemeFile",
	"UriSchemeFtp",
	"UriSchemeGopher",
	"UriSchemeHttp",
	"UriSchemeHttps",
	"UriSchemeMailto",
	"UriSchemeNews",
	"UriSchemeNntp",
	"UriSchemeNetPipe",
	"UriSchemeNetTcp",
	"schemes",
	"parser",
	"<>f__switch$map12",
	"<>f__switch$map13",
	"<>f__switch$map14",
	"<>f__switch$map15",
	"<>f__switch$map16",
	"Basic",
	"Dns",
	"IPv4",
	"IPv6",
	"RelativeOrAbsolute",
	"Absolute",
	"Relative",
	"lock_object",
	"table",
	"scheme_name",
	"default_port",
	"uri_regex",
	"auth_regex",
	"Scheme",
	"Authority",
	"Path",
	"Query",
	"$$field-2",
	"$$field-3",
	"$$field-4",
};
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
static const Il2CppFieldDefinition s_FieldTable[806] = 
{
	{ 0, 415, offsetof(MonoTODOAttribute_t480, ___comment_0), 0 } ,
	{ 1, 415, offsetof(GeneratedCodeAttribute_t397, ___tool_0), 0 } ,
	{ 2, 415, offsetof(GeneratedCodeAttribute_t397, ___version_1), 0 } ,
	{ 3, 1104, 0, 0 } ,
	{ 4, 267, 0, 0 } ,
	{ 5, 267, 0, 0 } ,
	{ 6, 1113, 0, 0 } ,
	{ 7, 267, 0, 0 } ,
	{ 5, 267, 0, 0 } ,
	{ 8, 402, offsetof(HybridDictionary_t483, ___caseInsensitive_0), 0 } ,
	{ 9, 1116, offsetof(HybridDictionary_t483, ___hashtable_1), 0 } ,
	{ 10, 1117, offsetof(HybridDictionary_t483, ___list_2), 0 } ,
	{ 11, 1119, offsetof(DictionaryNode_t484, ___key_0), 0 } ,
	{ 12, 1119, offsetof(DictionaryNode_t484, ___value_1), 0 } ,
	{ 13, 1120, offsetof(DictionaryNode_t484, ___next_2), 0 } ,
	{ 14, 1117, offsetof(DictionaryNodeEnumerator_t485, ___dict_0), 0 } ,
	{ 15, 402, offsetof(DictionaryNodeEnumerator_t485, ___isAtStart_1), 0 } ,
	{ 16, 1122, offsetof(DictionaryNodeEnumerator_t485, ___current_2), 0 } ,
	{ 2, 267, offsetof(DictionaryNodeEnumerator_t485, ___version_3), 0 } ,
	{ 17, 267, offsetof(ListDictionary_t482, ___count_0), 0 } ,
	{ 2, 267, offsetof(ListDictionary_t482, ___version_1), 0 } ,
	{ 18, 1122, offsetof(ListDictionary_t482, ___head_2), 0 } ,
	{ 19, 1125, offsetof(ListDictionary_t482, ___comparer_3), 0 } ,
	{ 11, 486, offsetof(_Item_t487, ___key_0), 0 } ,
	{ 12, 1119, offsetof(_Item_t487, ___value_1), 0 } ,
	{ 20, 1129, offsetof(_KeysEnumerator_t489, ___m_collection_0), 0 } ,
	{ 21, 267, offsetof(_KeysEnumerator_t489, ___m_position_1), 0 } ,
	{ 20, 1129, offsetof(KeysCollection_t490, ___m_collection_0), 0 } ,
	{ 22, 1116, offsetof(NameObjectCollectionBase_t488, ___m_ItemsContainer_0), 0 } ,
	{ 23, 1132, offsetof(NameObjectCollectionBase_t488, ___m_NullKeyItem_1), 0 } ,
	{ 24, 1133, offsetof(NameObjectCollectionBase_t488, ___m_ItemsArray_2), 0 } ,
	{ 25, 1134, offsetof(NameObjectCollectionBase_t488, ___m_hashprovider_3), 0 } ,
	{ 26, 1125, offsetof(NameObjectCollectionBase_t488, ___m_comparer_4), 0 } ,
	{ 27, 267, offsetof(NameObjectCollectionBase_t488, ___m_defCapacity_5), 0 } ,
	{ 28, 402, offsetof(NameObjectCollectionBase_t488, ___m_readonly_6), 0 } ,
	{ 29, 1135, offsetof(NameObjectCollectionBase_t488, ___infoCopy_7), 0 } ,
	{ 30, 1136, offsetof(NameObjectCollectionBase_t488, ___keyscoll_8), 0 } ,
	{ 31, 1137, offsetof(NameObjectCollectionBase_t488, ___equality_comparer_9), 0 } ,
	{ 32, 811, offsetof(NameValueCollection_t494, ___cachedAllKeys_10), 0 } ,
	{ 33, 811, offsetof(NameValueCollection_t494, ___cachedAll_11), 0 } ,
	{ 34, 909, offsetof(DefaultValueAttribute_t393, ___DefaultValue_0), 0 } ,
	{ 35, 1143, offsetof(EditorBrowsableAttribute_t390, ___state_0), 0 } ,
	{ 36, 259, offsetof(EditorBrowsableState_t495, ___value___1) + sizeof(Object_t), 0 } ,
	{ 37, 1145, 0, 0 } ,
	{ 38, 1145, 0, 0 } ,
	{ 39, 1145, 0, 0 } ,
	{ 40, 1149, offsetof(TypeConverterAttribute_t497_StaticFields, ___Default_0), 0 } ,
	{ 41, 415, offsetof(TypeConverterAttribute_t497, ___converter_type_1), 0 } ,
	{ 36, 259, offsetof(AuthenticationLevel_t498, ___value___1) + sizeof(Object_t), 0 } ,
	{ 42, 1151, 0, 0 } ,
	{ 43, 1151, 0, 0 } ,
	{ 44, 1151, 0, 0 } ,
	{ 36, 259, offsetof(SslPolicyErrors_t499, ___value___1) + sizeof(Object_t), 0 } ,
	{ 42, 1154, 0, 0 } ,
	{ 45, 1154, 0, 0 } ,
	{ 46, 1154, 0, 0 } ,
	{ 47, 1154, 0, 0 } ,
	{ 36, 259, offsetof(AddressFamily_t500, ___value___1) + sizeof(Object_t), 0 } ,
	{ 48, 1156, 0, 0 } ,
	{ 49, 1156, 0, 0 } ,
	{ 50, 1156, 0, 0 } ,
	{ 51, 1156, 0, 0 } ,
	{ 52, 1156, 0, 0 } ,
	{ 53, 1156, 0, 0 } ,
	{ 54, 1156, 0, 0 } ,
	{ 55, 1156, 0, 0 } ,
	{ 56, 1156, 0, 0 } ,
	{ 57, 1156, 0, 0 } ,
	{ 58, 1156, 0, 0 } ,
	{ 59, 1156, 0, 0 } ,
	{ 60, 1156, 0, 0 } ,
	{ 61, 1156, 0, 0 } ,
	{ 62, 1156, 0, 0 } ,
	{ 63, 1156, 0, 0 } ,
	{ 64, 1156, 0, 0 } ,
	{ 65, 1156, 0, 0 } ,
	{ 66, 1156, 0, 0 } ,
	{ 67, 1156, 0, 0 } ,
	{ 68, 1156, 0, 0 } ,
	{ 69, 1156, 0, 0 } ,
	{ 70, 1156, 0, 0 } ,
	{ 71, 1156, 0, 0 } ,
	{ 72, 1156, 0, 0 } ,
	{ 73, 1156, 0, 0 } ,
	{ 74, 1156, 0, 0 } ,
	{ 75, 1156, 0, 0 } ,
	{ 76, 1156, 0, 0 } ,
	{ 77, 1156, 0, 0 } ,
	{ 78, 1156, 0, 0 } ,
	{ 79, 694, offsetof(FileWebRequest_t504, ___uri_6), 0 } ,
	{ 80, 1161, offsetof(FileWebRequest_t504, ___webHeaders_7), 0 } ,
	{ 81, 415, offsetof(FileWebRequest_t504, ___connectionGroup_8), 0 } ,
	{ 82, 806, offsetof(FileWebRequest_t504, ___contentLength_9), 0 } ,
	{ 83, 1162, offsetof(FileWebRequest_t504, ___fileAccess_10), 0 } ,
	{ 84, 415, offsetof(FileWebRequest_t504, ___method_11), 0 } ,
	{ 85, 1163, offsetof(FileWebRequest_t504, ___proxy_12), 0 } ,
	{ 86, 402, offsetof(FileWebRequest_t504, ___preAuthenticate_13), 0 } ,
	{ 87, 267, offsetof(FileWebRequest_t504, ___timeout_14), 0 } ,
	{ 88, 694, offsetof(FtpWebRequest_t509, ___requestUri_6), 0 } ,
	{ 85, 1163, offsetof(FtpWebRequest_t509, ___proxy_7), 0 } ,
	{ 87, 267, offsetof(FtpWebRequest_t509, ___timeout_8), 0 } ,
	{ 89, 267, offsetof(FtpWebRequest_t509, ___rwTimeout_9), 0 } ,
	{ 90, 402, offsetof(FtpWebRequest_t509, ___binary_10), 0 } ,
	{ 91, 402, offsetof(FtpWebRequest_t509, ___usePassive_11), 0 } ,
	{ 84, 415, offsetof(FtpWebRequest_t509, ___method_12), 0 } ,
	{ 92, 909, offsetof(FtpWebRequest_t509, ___locker_13), 0 } ,
	{ 93, 719, offsetof(FtpWebRequest_t509_StaticFields, ___supportedCommands_14), 0 } ,
	{ 94, 1170, offsetof(FtpWebRequest_t509, ___callback_15), 0 } ,
	{ 95, 1171, offsetof(FtpWebRequest_t509_StaticFields, ___U3CU3Ef__amU24cache1C_16), 17 } ,
	{ 96, 1177, offsetof(HttpVersion_t513_StaticFields, ___Version10_0), 0 } ,
	{ 97, 1177, offsetof(HttpVersion_t513_StaticFields, ___Version11_1), 0 } ,
	{ 88, 694, offsetof(HttpWebRequest_t516, ___requestUri_6), 0 } ,
	{ 98, 694, offsetof(HttpWebRequest_t516, ___actualUri_7), 0 } ,
	{ 99, 402, offsetof(HttpWebRequest_t516, ___hostChanged_8), 0 } ,
	{ 100, 402, offsetof(HttpWebRequest_t516, ___allowAutoRedirect_9), 0 } ,
	{ 101, 402, offsetof(HttpWebRequest_t516, ___allowBuffering_10), 0 } ,
	{ 102, 1179, offsetof(HttpWebRequest_t516, ___certificates_11), 0 } ,
	{ 81, 415, offsetof(HttpWebRequest_t516, ___connectionGroup_12), 0 } ,
	{ 82, 806, offsetof(HttpWebRequest_t516, ___contentLength_13), 0 } ,
	{ 80, 1161, offsetof(HttpWebRequest_t516, ___webHeaders_14), 0 } ,
	{ 103, 402, offsetof(HttpWebRequest_t516, ___keepAlive_15), 0 } ,
	{ 104, 267, offsetof(HttpWebRequest_t516, ___maxAutoRedirect_16), 0 } ,
	{ 105, 415, offsetof(HttpWebRequest_t516, ___mediaType_17), 0 } ,
	{ 84, 415, offsetof(HttpWebRequest_t516, ___method_18), 0 } ,
	{ 106, 415, offsetof(HttpWebRequest_t516, ___initialMethod_19), 0 } ,
	{ 107, 402, offsetof(HttpWebRequest_t516, ___pipelined_20), 0 } ,
	{ 2, 1180, offsetof(HttpWebRequest_t516, ___version_21), 0 } ,
	{ 85, 1163, offsetof(HttpWebRequest_t516, ___proxy_22), 0 } ,
	{ 108, 402, offsetof(HttpWebRequest_t516, ___sendChunked_23), 0 } ,
	{ 109, 1181, offsetof(HttpWebRequest_t516, ___servicePoint_24), 0 } ,
	{ 87, 267, offsetof(HttpWebRequest_t516, ___timeout_25), 0 } ,
	{ 110, 267, offsetof(HttpWebRequest_t516, ___redirects_26), 0 } ,
	{ 92, 909, offsetof(HttpWebRequest_t516, ___locker_27), 0 } ,
	{ 111, 360, offsetof(HttpWebRequest_t516_StaticFields, ___defaultMaxResponseHeadersLength_28), 0 } ,
	{ 112, 267, offsetof(HttpWebRequest_t516, ___readWriteTimeout_29), 0 } ,
	{ 113, 806, offsetof(IPAddress_t518, ___m_Address_0), 0 } ,
	{ 114, 1187, offsetof(IPAddress_t518, ___m_Family_1), 0 } ,
	{ 115, 1188, offsetof(IPAddress_t518, ___m_Numbers_2), 0 } ,
	{ 116, 806, offsetof(IPAddress_t518, ___m_ScopeId_3), 0 } ,
	{ 117, 1189, offsetof(IPAddress_t518_StaticFields, ___Any_4), 0 } ,
	{ 118, 1189, offsetof(IPAddress_t518_StaticFields, ___Broadcast_5), 0 } ,
	{ 119, 1189, offsetof(IPAddress_t518_StaticFields, ___Loopback_6), 0 } ,
	{ 42, 1189, offsetof(IPAddress_t518_StaticFields, ___None_7), 0 } ,
	{ 120, 1189, offsetof(IPAddress_t518_StaticFields, ___IPv6Any_8), 0 } ,
	{ 121, 1189, offsetof(IPAddress_t518_StaticFields, ___IPv6Loopback_9), 0 } ,
	{ 122, 1189, offsetof(IPAddress_t518_StaticFields, ___IPv6None_10), 0 } ,
	{ 123, 1188, offsetof(IPv6Address_t519, ___address_0), 0 } ,
	{ 124, 267, offsetof(IPv6Address_t519, ___prefixLength_1), 0 } ,
	{ 125, 806, offsetof(IPv6Address_t519, ___scopeId_2), 0 } ,
	{ 119, 1192, offsetof(IPv6Address_t519_StaticFields, ___Loopback_3), 0 } ,
	{ 49, 1192, offsetof(IPv6Address_t519_StaticFields, ___Unspecified_4), 0 } ,
	{ 36, 259, offsetof(SecurityProtocolType_t520, ___value___1) + sizeof(Object_t), 0 } ,
	{ 126, 1196, 0, 0 } ,
	{ 127, 1196, 0, 0 } ,
	{ 79, 694, offsetof(ServicePoint_t515, ___uri_0), 0 } ,
	{ 128, 267, offsetof(ServicePoint_t515, ___connectionLimit_1), 0 } ,
	{ 129, 267, offsetof(ServicePoint_t515, ___maxIdleTime_2), 0 } ,
	{ 130, 267, offsetof(ServicePoint_t515, ___currentConnections_3), 0 } ,
	{ 131, 801, offsetof(ServicePoint_t515, ___idleSince_4), 0 } ,
	{ 132, 402, offsetof(ServicePoint_t515, ___usesProxy_5), 0 } ,
	{ 133, 402, offsetof(ServicePoint_t515, ___sendContinue_6), 0 } ,
	{ 134, 402, offsetof(ServicePoint_t515, ___useConnect_7), 0 } ,
	{ 92, 909, offsetof(ServicePoint_t515, ___locker_8), 0 } ,
	{ 135, 909, offsetof(ServicePoint_t515, ___hostE_9), 0 } ,
	{ 136, 402, offsetof(ServicePoint_t515, ___useNagle_10), 0 } ,
	{ 79, 694, offsetof(SPKey_t521, ___uri_0), 0 } ,
	{ 137, 402, offsetof(SPKey_t521, ___use_connect_1), 0 } ,
	{ 138, 1201, offsetof(ServicePointManager_t523_StaticFields, ___servicePoints_0), 0 } ,
	{ 139, 1202, offsetof(ServicePointManager_t523_StaticFields, ___policy_1), 0 } ,
	{ 140, 360, offsetof(ServicePointManager_t523_StaticFields, ___defaultConnectionLimit_2), 0 } ,
	{ 141, 360, offsetof(ServicePointManager_t523_StaticFields, ___maxServicePointIdleTime_3), 0 } ,
	{ 142, 360, offsetof(ServicePointManager_t523_StaticFields, ___maxServicePoints_4), 0 } ,
	{ 143, 669, offsetof(ServicePointManager_t523_StaticFields, ____checkCRL_5), 0 } ,
	{ 144, 1203, offsetof(ServicePointManager_t523_StaticFields, ____securityProtocol_6), 0 } ,
	{ 145, 669, offsetof(ServicePointManager_t523_StaticFields, ___expectContinue_7), 0 } ,
	{ 136, 669, offsetof(ServicePointManager_t523_StaticFields, ___useNagle_8), 0 } ,
	{ 146, 1171, offsetof(ServicePointManager_t523_StaticFields, ___server_cert_cb_9), 0 } ,
	{ 147, 1205, offsetof(WebHeaderCollection_t502_StaticFields, ___restricted_12), 0 } ,
	{ 148, 1205, offsetof(WebHeaderCollection_t502_StaticFields, ___multiValue_13), 0 } ,
	{ 149, 1206, offsetof(WebHeaderCollection_t502_StaticFields, ___restricted_response_14), 0 } ,
	{ 150, 402, offsetof(WebHeaderCollection_t502, ___internallyCreated_15), 0 } ,
	{ 151, 1207, offsetof(WebHeaderCollection_t502_StaticFields, ___allowed_chars_16), 0 } ,
	{ 123, 694, offsetof(WebProxy_t527, ___address_0), 0 } ,
	{ 152, 402, offsetof(WebProxy_t527, ___bypassOnLocal_1), 0 } ,
	{ 153, 1133, offsetof(WebProxy_t527, ___bypassList_2), 0 } ,
	{ 154, 1209, offsetof(WebProxy_t527, ___credentials_3), 0 } ,
	{ 155, 402, offsetof(WebProxy_t527, ___useDefaultCredentials_4), 0 } ,
	{ 156, 1201, offsetof(WebRequest_t505_StaticFields, ___prefixes_1), 0 } ,
	{ 157, 669, offsetof(WebRequest_t505_StaticFields, ___isDefaultWebProxySet_2), 0 } ,
	{ 158, 1212, offsetof(WebRequest_t505_StaticFields, ___defaultWebProxy_3), 0 } ,
	{ 159, 1213, offsetof(WebRequest_t505, ___authentication_level_4), 0 } ,
	{ 160, 1214, offsetof(WebRequest_t505_StaticFields, ___lockobj_5), 0 } ,
	{ 36, 259, offsetof(OpenFlags_t529, ___value___1) + sizeof(Object_t), 0 } ,
	{ 161, 1217, 0, 0 } ,
	{ 162, 1217, 0, 0 } ,
	{ 163, 1217, 0, 0 } ,
	{ 164, 1217, 0, 0 } ,
	{ 165, 1217, 0, 0 } ,
	{ 166, 1221, offsetof(PublicKey_t533, ____key_0), 0 } ,
	{ 167, 1222, offsetof(PublicKey_t533, ____keyValue_1), 0 } ,
	{ 168, 1222, offsetof(PublicKey_t533, ____params_2), 0 } ,
	{ 169, 1223, offsetof(PublicKey_t533, ____oid_3), 0 } ,
	{ 170, 436, offsetof(PublicKey_t533_StaticFields, ___U3CU3Ef__switchU24map9_4), 29 } ,
	{ 36, 259, offsetof(StoreLocation_t534, ___value___1) + sizeof(Object_t), 0 } ,
	{ 171, 1225, 0, 0 } ,
	{ 172, 1225, 0, 0 } ,
	{ 36, 259, offsetof(StoreName_t535, ___value___1) + sizeof(Object_t), 0 } ,
	{ 173, 1228, 0, 0 } ,
	{ 174, 1228, 0, 0 } ,
	{ 175, 1228, 0, 0 } ,
	{ 176, 1228, 0, 0 } ,
	{ 177, 1228, 0, 0 } ,
	{ 178, 1228, 0, 0 } ,
	{ 179, 1228, 0, 0 } ,
	{ 180, 1228, 0, 0 } ,
	{ 181, 415, offsetof(X500DistinguishedName_t536, ___name_3), 0 } ,
	{ 36, 259, offsetof(X500DistinguishedNameFlags_t537, ___value___1) + sizeof(Object_t), 0 } ,
	{ 42, 1232, 0, 0 } ,
	{ 182, 1232, 0, 0 } ,
	{ 183, 1232, 0, 0 } ,
	{ 184, 1232, 0, 0 } ,
	{ 185, 1232, 0, 0 } ,
	{ 186, 1232, 0, 0 } ,
	{ 187, 1232, 0, 0 } ,
	{ 188, 1232, 0, 0 } ,
	{ 189, 1232, 0, 0 } ,
	{ 190, 1232, 0, 0 } ,
	{ 191, 1235, 0, 0 } ,
	{ 192, 1235, 0, 0 } ,
	{ 193, 402, offsetof(X509BasicConstraintsExtension_t538, ____certificateAuthority_6), 0 } ,
	{ 194, 402, offsetof(X509BasicConstraintsExtension_t538, ____hasPathLengthConstraint_7), 0 } ,
	{ 195, 267, offsetof(X509BasicConstraintsExtension_t538, ____pathLengthConstraint_8), 0 } ,
	{ 196, 1236, offsetof(X509BasicConstraintsExtension_t538, ____status_9), 0 } ,
	{ 197, 402, offsetof(X509Certificate2_t542, ____archived_5), 0 } ,
	{ 198, 1240, offsetof(X509Certificate2_t542, ____extensions_6), 0 } ,
	{ 199, 415, offsetof(X509Certificate2_t542, ____name_7), 0 } ,
	{ 200, 415, offsetof(X509Certificate2_t542, ____serial_8), 0 } ,
	{ 201, 1241, offsetof(X509Certificate2_t542, ____publicKey_9), 0 } ,
	{ 202, 1242, offsetof(X509Certificate2_t542, ___issuer_name_10), 0 } ,
	{ 203, 1242, offsetof(X509Certificate2_t542, ___subject_name_11), 0 } ,
	{ 204, 1223, offsetof(X509Certificate2_t542, ___signature_algorithm_12), 0 } ,
	{ 205, 1243, offsetof(X509Certificate2_t542, ____cert_13), 0 } ,
	{ 206, 840, offsetof(X509Certificate2_t542_StaticFields, ___empty_error_14), 0 } ,
	{ 207, 483, offsetof(X509Certificate2_t542_StaticFields, ___commonName_15), 0 } ,
	{ 208, 483, offsetof(X509Certificate2_t542_StaticFields, ___email_16), 0 } ,
	{ 209, 483, offsetof(X509Certificate2_t542_StaticFields, ___signedData_17), 0 } ,
	{ 210, 1246, offsetof(X509Certificate2Enumerator_t545, ___enumerator_0), 0 } ,
	{ 210, 1246, offsetof(X509CertificateEnumerator_t546, ___enumerator_0), 0 } ,
	{ 211, 1253, offsetof(X509Chain_t554, ___location_0), 0 } ,
	{ 212, 1254, offsetof(X509Chain_t554, ___elements_1), 0 } ,
	{ 139, 1255, offsetof(X509Chain_t554, ___policy_2), 0 } ,
	{ 213, 1256, offsetof(X509Chain_t554, ___status_3), 0 } ,
	{ 214, 1257, offsetof(X509Chain_t554_StaticFields, ___Empty_4), 0 } ,
	{ 215, 267, offsetof(X509Chain_t554, ___max_path_length_5), 0 } ,
	{ 216, 1242, offsetof(X509Chain_t554, ___working_issuer_name_6), 0 } ,
	{ 217, 1221, offsetof(X509Chain_t554, ___working_public_key_7), 0 } ,
	{ 218, 1258, offsetof(X509Chain_t554, ___bce_restriction_8), 0 } ,
	{ 219, 1259, offsetof(X509Chain_t554, ___roots_9), 0 } ,
	{ 220, 1259, offsetof(X509Chain_t554, ___cas_10), 0 } ,
	{ 221, 1260, offsetof(X509Chain_t554, ___collection_11), 0 } ,
	{ 222, 436, offsetof(X509Chain_t554_StaticFields, ___U3CU3Ef__switchU24mapB_12), 39 } ,
	{ 223, 436, offsetof(X509Chain_t554_StaticFields, ___U3CU3Ef__switchU24mapC_13), 40 } ,
	{ 224, 436, offsetof(X509Chain_t554_StaticFields, ___U3CU3Ef__switchU24mapD_14), 41 } ,
	{ 225, 1262, offsetof(X509ChainElement_t552, ___certificate_0), 0 } ,
	{ 213, 1256, offsetof(X509ChainElement_t552, ___status_1), 0 } ,
	{ 226, 415, offsetof(X509ChainElement_t552, ___info_2), 0 } ,
	{ 227, 1263, offsetof(X509ChainElement_t552, ___compressed_status_flags_3), 0 } ,
	{ 228, 1133, offsetof(X509ChainElementCollection_t548, ____list_0), 0 } ,
	{ 210, 1246, offsetof(X509ChainElementEnumerator_t555, ___enumerator_0), 0 } ,
	{ 229, 1270, offsetof(X509ChainPolicy_t549, ___apps_0), 0 } ,
	{ 230, 1270, offsetof(X509ChainPolicy_t549, ___cert_1), 0 } ,
	{ 231, 1260, offsetof(X509ChainPolicy_t549, ___store_2), 0 } ,
	{ 232, 1271, offsetof(X509ChainPolicy_t549, ___rflag_3), 0 } ,
	{ 233, 1272, offsetof(X509ChainPolicy_t549, ___mode_4), 0 } ,
	{ 87, 1273, offsetof(X509ChainPolicy_t549, ___timeout_5), 0 } ,
	{ 234, 1274, offsetof(X509ChainPolicy_t549, ___vflags_6), 0 } ,
	{ 235, 801, offsetof(X509ChainPolicy_t549, ___vtime_7), 0 } ,
	{ 213, 1263, offsetof(X509ChainStatus_t551, ___status_0) + sizeof(Object_t), 0 } ,
	{ 226, 415, offsetof(X509ChainStatus_t551, ___info_1) + sizeof(Object_t), 0 } ,
	{ 36, 259, offsetof(X509ChainStatusFlags_t558, ___value___1) + sizeof(Object_t), 0 } ,
	{ 236, 1277, 0, 0 } ,
	{ 237, 1277, 0, 0 } ,
	{ 238, 1277, 0, 0 } ,
	{ 239, 1277, 0, 0 } ,
	{ 240, 1277, 0, 0 } ,
	{ 241, 1277, 0, 0 } ,
	{ 242, 1277, 0, 0 } ,
	{ 243, 1277, 0, 0 } ,
	{ 244, 1277, 0, 0 } ,
	{ 245, 1277, 0, 0 } ,
	{ 246, 1277, 0, 0 } ,
	{ 247, 1277, 0, 0 } ,
	{ 248, 1277, 0, 0 } ,
	{ 249, 1277, 0, 0 } ,
	{ 250, 1277, 0, 0 } ,
	{ 251, 1277, 0, 0 } ,
	{ 252, 1277, 0, 0 } ,
	{ 253, 1277, 0, 0 } ,
	{ 254, 1277, 0, 0 } ,
	{ 255, 1277, 0, 0 } ,
	{ 256, 1277, 0, 0 } ,
	{ 257, 1277, 0, 0 } ,
	{ 258, 1277, 0, 0 } ,
	{ 259, 1270, offsetof(X509EnhancedKeyUsageExtension_t559, ____enhKeyUsage_4), 0 } ,
	{ 196, 1236, offsetof(X509EnhancedKeyUsageExtension_t559, ____status_5), 0 } ,
	{ 260, 436, offsetof(X509EnhancedKeyUsageExtension_t559_StaticFields, ___U3CU3Ef__switchU24mapE_6), 45 } ,
	{ 261, 402, offsetof(X509Extension_t539, ____critical_3), 0 } ,
	{ 228, 1133, offsetof(X509ExtensionCollection_t540, ____list_0), 0 } ,
	{ 210, 1246, offsetof(X509ExtensionEnumerator_t560, ___enumerator_0), 0 } ,
	{ 36, 259, offsetof(X509FindType_t561, ___value___1) + sizeof(Object_t), 0 } ,
	{ 262, 1283, 0, 0 } ,
	{ 263, 1283, 0, 0 } ,
	{ 264, 1283, 0, 0 } ,
	{ 265, 1283, 0, 0 } ,
	{ 266, 1283, 0, 0 } ,
	{ 267, 1283, 0, 0 } ,
	{ 268, 1283, 0, 0 } ,
	{ 269, 1283, 0, 0 } ,
	{ 270, 1283, 0, 0 } ,
	{ 271, 1283, 0, 0 } ,
	{ 272, 1283, 0, 0 } ,
	{ 273, 1283, 0, 0 } ,
	{ 274, 1283, 0, 0 } ,
	{ 275, 1283, 0, 0 } ,
	{ 276, 1283, 0, 0 } ,
	{ 191, 1235, 0, 0 } ,
	{ 192, 1235, 0, 0 } ,
	{ 277, 1286, 0, 0 } ,
	{ 278, 1287, offsetof(X509KeyUsageExtension_t562, ____keyUsages_7), 0 } ,
	{ 196, 1236, offsetof(X509KeyUsageExtension_t562, ____status_8), 0 } ,
	{ 36, 259, offsetof(X509KeyUsageFlags_t563, ___value___1) + sizeof(Object_t), 0 } ,
	{ 42, 1289, 0, 0 } ,
	{ 279, 1289, 0, 0 } ,
	{ 280, 1289, 0, 0 } ,
	{ 281, 1289, 0, 0 } ,
	{ 282, 1289, 0, 0 } ,
	{ 283, 1289, 0, 0 } ,
	{ 284, 1289, 0, 0 } ,
	{ 285, 1289, 0, 0 } ,
	{ 286, 1289, 0, 0 } ,
	{ 287, 1289, 0, 0 } ,
	{ 36, 259, offsetof(X509NameType_t564, ___value___1) + sizeof(Object_t), 0 } ,
	{ 288, 1291, 0, 0 } ,
	{ 289, 1291, 0, 0 } ,
	{ 290, 1291, 0, 0 } ,
	{ 291, 1291, 0, 0 } ,
	{ 292, 1291, 0, 0 } ,
	{ 293, 1291, 0, 0 } ,
	{ 36, 259, offsetof(X509RevocationFlag_t565, ___value___1) + sizeof(Object_t), 0 } ,
	{ 294, 1293, 0, 0 } ,
	{ 295, 1293, 0, 0 } ,
	{ 296, 1293, 0, 0 } ,
	{ 36, 259, offsetof(X509RevocationMode_t566, ___value___1) + sizeof(Object_t), 0 } ,
	{ 297, 1295, 0, 0 } ,
	{ 298, 1295, 0, 0 } ,
	{ 299, 1295, 0, 0 } ,
	{ 199, 415, offsetof(X509Store_t553, ____name_0), 0 } ,
	{ 300, 1253, offsetof(X509Store_t553, ____location_1), 0 } ,
	{ 10, 1260, offsetof(X509Store_t553, ___list_2), 0 } ,
	{ 301, 1299, offsetof(X509Store_t553, ____flags_3), 0 } ,
	{ 231, 1300, offsetof(X509Store_t553, ___store_4), 0 } ,
	{ 302, 436, offsetof(X509Store_t553_StaticFields, ___U3CU3Ef__switchU24mapF_5), 48 } ,
	{ 191, 1235, 0, 0 } ,
	{ 192, 1235, 0, 0 } ,
	{ 303, 481, offsetof(X509SubjectKeyIdentifierExtension_t568, ____subjectKeyIdentifier_6), 0 } ,
	{ 304, 415, offsetof(X509SubjectKeyIdentifierExtension_t568, ____ski_7), 0 } ,
	{ 196, 1236, offsetof(X509SubjectKeyIdentifierExtension_t568, ____status_8), 0 } ,
	{ 36, 259, offsetof(X509SubjectKeyIdentifierHashAlgorithm_t569, ___value___1) + sizeof(Object_t), 0 } ,
	{ 305, 1304, 0, 0 } ,
	{ 306, 1304, 0, 0 } ,
	{ 307, 1304, 0, 0 } ,
	{ 36, 259, offsetof(X509VerificationFlags_t570, ___value___1) + sizeof(Object_t), 0 } ,
	{ 308, 1306, 0, 0 } ,
	{ 309, 1306, 0, 0 } ,
	{ 310, 1306, 0, 0 } ,
	{ 311, 1306, 0, 0 } ,
	{ 312, 1306, 0, 0 } ,
	{ 313, 1306, 0, 0 } ,
	{ 314, 1306, 0, 0 } ,
	{ 315, 1306, 0, 0 } ,
	{ 316, 1306, 0, 0 } ,
	{ 317, 1306, 0, 0 } ,
	{ 318, 1306, 0, 0 } ,
	{ 319, 1306, 0, 0 } ,
	{ 320, 1306, 0, 0 } ,
	{ 321, 1306, 0, 0 } ,
	{ 36, 259, offsetof(AsnDecodeStatus_t571, ___value___1) + sizeof(Object_t), 0 } ,
	{ 322, 1308, 0, 0 } ,
	{ 323, 1308, 0, 0 } ,
	{ 324, 1308, 0, 0 } ,
	{ 325, 1308, 0, 0 } ,
	{ 326, 1308, 0, 0 } ,
	{ 327, 1308, 0, 0 } ,
	{ 169, 1310, offsetof(AsnEncodedData_t531, ____oid_0), 0 } ,
	{ 328, 1311, offsetof(AsnEncodedData_t531, ____raw_1), 0 } ,
	{ 329, 436, offsetof(AsnEncodedData_t531_StaticFields, ___U3CU3Ef__switchU24mapA_2), 50 } ,
	{ 330, 415, offsetof(Oid_t532, ____value_0), 0 } ,
	{ 199, 415, offsetof(Oid_t532, ____name_1), 0 } ,
	{ 331, 436, offsetof(Oid_t532_StaticFields, ___U3CU3Ef__switchU24map10_2), 51 } ,
	{ 228, 1133, offsetof(OidCollection_t556, ____list_0), 0 } ,
	{ 332, 402, offsetof(OidCollection_t556, ____readOnly_1), 0 } ,
	{ 333, 1270, offsetof(OidEnumerator_t572, ____collection_0), 0 } ,
	{ 334, 267, offsetof(OidEnumerator_t572, ____position_1), 0 } ,
	{ 335, 383, offsetof(BaseMachine_t575, ___needs_groups_or_captures_0), 0 } ,
	{ 336, 545, offsetof(Capture_t576, ___index_0), 0 } ,
	{ 337, 545, offsetof(Capture_t576, ___length_1), 0 } ,
	{ 338, 254, offsetof(Capture_t576, ___text_2), 0 } ,
	{ 10, 1320, offsetof(CaptureCollection_t578, ___list_0), 0 } ,
	{ 339, 1322, offsetof(Group_t579_StaticFields, ___Fail_3), 0 } ,
	{ 340, 402, offsetof(Group_t579, ___success_4), 0 } ,
	{ 341, 1323, offsetof(Group_t579, ___captures_5), 0 } ,
	{ 10, 1325, offsetof(GroupCollection_t581, ___list_0), 0 } ,
	{ 342, 267, offsetof(GroupCollection_t581, ___gap_1), 0 } ,
	{ 343, 1327, offsetof(Match_t573, ___regex_6), 0 } ,
	{ 344, 1328, offsetof(Match_t573, ___machine_7), 0 } ,
	{ 345, 267, offsetof(Match_t573, ___text_length_8), 0 } ,
	{ 346, 1329, offsetof(Match_t573, ___groups_9), 0 } ,
	{ 347, 1330, offsetof(Match_t573_StaticFields, ___empty_10), 0 } ,
	{ 336, 267, offsetof(Enumerator_t584, ___index_0), 0 } ,
	{ 348, 1332, offsetof(Enumerator_t584, ___coll_1), 0 } ,
	{ 16, 1334, offsetof(MatchCollection_t583, ___current_0), 0 } ,
	{ 10, 1133, offsetof(MatchCollection_t583, ___list_1), 0 } ,
	{ 349, 1336, offsetof(Regex_t380_StaticFields, ___cache_0), 0 } ,
	{ 350, 1337, offsetof(Regex_t380, ___machineFactory_1), 0 } ,
	{ 351, 1338, offsetof(Regex_t380, ___mapping_2), 0 } ,
	{ 352, 267, offsetof(Regex_t380, ___group_count_3), 0 } ,
	{ 342, 267, offsetof(Regex_t380, ___gap_4), 0 } ,
	{ 353, 402, offsetof(Regex_t380, ___refsInitialized_5), 0 } ,
	{ 354, 811, offsetof(Regex_t380, ___group_names_6), 0 } ,
	{ 355, 1339, offsetof(Regex_t380, ___group_numbers_7), 0 } ,
	{ 356, 1340, offsetof(Regex_t380, ___pattern_8), 0 } ,
	{ 357, 1341, offsetof(Regex_t380, ___roptions_9), 0 } ,
	{ 358, 1342, offsetof(Regex_t380, ___capnames_10), 56 } ,
	{ 359, 1343, offsetof(Regex_t380, ___caps_11), 57 } ,
	{ 360, 1344, offsetof(Regex_t380, ___capsize_12), 58 } ,
	{ 361, 1345, offsetof(Regex_t380, ___capslist_13), 59 } ,
	{ 36, 259, offsetof(RegexOptions_t590, ___value___1) + sizeof(Object_t), 0 } ,
	{ 42, 1347, 0, 0 } ,
	{ 362, 1347, 0, 0 } ,
	{ 363, 1347, 0, 0 } ,
	{ 364, 1347, 0, 0 } ,
	{ 365, 1347, 0, 0 } ,
	{ 366, 1347, 0, 0 } ,
	{ 367, 1347, 0, 0 } ,
	{ 368, 1347, 0, 0 } ,
	{ 369, 1347, 0, 0 } ,
	{ 36, 663, offsetof(OpCode_t591, ___value___1) + sizeof(Object_t), 0 } ,
	{ 370, 1349, 0, 0 } ,
	{ 371, 1349, 0, 0 } ,
	{ 372, 1349, 0, 0 } ,
	{ 373, 1349, 0, 0 } ,
	{ 374, 1349, 0, 0 } ,
	{ 375, 1349, 0, 0 } ,
	{ 376, 1349, 0, 0 } ,
	{ 377, 1349, 0, 0 } ,
	{ 378, 1349, 0, 0 } ,
	{ 379, 1349, 0, 0 } ,
	{ 380, 1349, 0, 0 } ,
	{ 381, 1349, 0, 0 } ,
	{ 382, 1349, 0, 0 } ,
	{ 383, 1349, 0, 0 } ,
	{ 384, 1349, 0, 0 } ,
	{ 385, 1349, 0, 0 } ,
	{ 386, 1349, 0, 0 } ,
	{ 387, 1349, 0, 0 } ,
	{ 388, 1349, 0, 0 } ,
	{ 389, 1349, 0, 0 } ,
	{ 390, 1349, 0, 0 } ,
	{ 391, 1349, 0, 0 } ,
	{ 392, 1349, 0, 0 } ,
	{ 393, 1349, 0, 0 } ,
	{ 394, 1349, 0, 0 } ,
	{ 36, 663, offsetof(OpFlags_t592, ___value___1) + sizeof(Object_t), 0 } ,
	{ 42, 1352, 0, 0 } ,
	{ 395, 1352, 0, 0 } ,
	{ 362, 1352, 0, 0 } ,
	{ 367, 1352, 0, 0 } ,
	{ 396, 1352, 0, 0 } ,
	{ 36, 663, offsetof(Position_t593, ___value___1) + sizeof(Object_t), 0 } ,
	{ 117, 1355, 0, 0 } ,
	{ 397, 1355, 0, 0 } ,
	{ 398, 1355, 0, 0 } ,
	{ 399, 1355, 0, 0 } ,
	{ 400, 1355, 0, 0 } ,
	{ 401, 1355, 0, 0 } ,
	{ 402, 1355, 0, 0 } ,
	{ 403, 1355, 0, 0 } ,
	{ 404, 1355, 0, 0 } ,
	{ 405, 1355, 0, 0 } ,
	{ 356, 486, offsetof(Key_t594, ___pattern_0), 0 } ,
	{ 406, 1360, offsetof(Key_t594, ___options_1), 0 } ,
	{ 407, 267, offsetof(FactoryCache_t585, ___capacity_0), 0 } ,
	{ 408, 1116, offsetof(FactoryCache_t585, ___factories_1), 0 } ,
	{ 409, 1362, offsetof(FactoryCache_t585, ___mru_list_2), 0 } ,
	{ 12, 1119, offsetof(Node_t596, ___value_0), 0 } ,
	{ 410, 1364, offsetof(Node_t596, ___previous_1), 0 } ,
	{ 13, 1364, offsetof(Node_t596, ___next_2), 0 } ,
	{ 18, 1366, offsetof(MRUList_t595, ___head_0), 0 } ,
	{ 411, 1366, offsetof(MRUList_t595, ___tail_1), 0 } ,
	{ 36, 663, offsetof(Category_t597, ___value___1) + sizeof(Object_t), 0 } ,
	{ 42, 1368, 0, 0 } ,
	{ 117, 1368, 0, 0 } ,
	{ 412, 1368, 0, 0 } ,
	{ 413, 1368, 0, 0 } ,
	{ 414, 1368, 0, 0 } ,
	{ 415, 1368, 0, 0 } ,
	{ 416, 1368, 0, 0 } ,
	{ 417, 1368, 0, 0 } ,
	{ 418, 1368, 0, 0 } ,
	{ 419, 1368, 0, 0 } ,
	{ 420, 1368, 0, 0 } ,
	{ 421, 1368, 0, 0 } ,
	{ 422, 1368, 0, 0 } ,
	{ 423, 1368, 0, 0 } ,
	{ 424, 1368, 0, 0 } ,
	{ 425, 1368, 0, 0 } ,
	{ 426, 1368, 0, 0 } ,
	{ 427, 1368, 0, 0 } ,
	{ 428, 1368, 0, 0 } ,
	{ 429, 1368, 0, 0 } ,
	{ 430, 1368, 0, 0 } ,
	{ 431, 1368, 0, 0 } ,
	{ 432, 1368, 0, 0 } ,
	{ 433, 1368, 0, 0 } ,
	{ 434, 1368, 0, 0 } ,
	{ 435, 1368, 0, 0 } ,
	{ 436, 1368, 0, 0 } ,
	{ 437, 1368, 0, 0 } ,
	{ 438, 1368, 0, 0 } ,
	{ 439, 1368, 0, 0 } ,
	{ 440, 1368, 0, 0 } ,
	{ 441, 1368, 0, 0 } ,
	{ 442, 1368, 0, 0 } ,
	{ 443, 1368, 0, 0 } ,
	{ 444, 1368, 0, 0 } ,
	{ 445, 1368, 0, 0 } ,
	{ 446, 1368, 0, 0 } ,
	{ 447, 1368, 0, 0 } ,
	{ 448, 1368, 0, 0 } ,
	{ 449, 1368, 0, 0 } ,
	{ 450, 1368, 0, 0 } ,
	{ 451, 1368, 0, 0 } ,
	{ 452, 1368, 0, 0 } ,
	{ 453, 1368, 0, 0 } ,
	{ 454, 1368, 0, 0 } ,
	{ 455, 1368, 0, 0 } ,
	{ 456, 1368, 0, 0 } ,
	{ 457, 1368, 0, 0 } ,
	{ 458, 1368, 0, 0 } ,
	{ 459, 1368, 0, 0 } ,
	{ 460, 1368, 0, 0 } ,
	{ 461, 1368, 0, 0 } ,
	{ 462, 1368, 0, 0 } ,
	{ 463, 1368, 0, 0 } ,
	{ 464, 1368, 0, 0 } ,
	{ 465, 1368, 0, 0 } ,
	{ 466, 1368, 0, 0 } ,
	{ 467, 1368, 0, 0 } ,
	{ 468, 1368, 0, 0 } ,
	{ 469, 1368, 0, 0 } ,
	{ 470, 1368, 0, 0 } ,
	{ 471, 1368, 0, 0 } ,
	{ 472, 1368, 0, 0 } ,
	{ 473, 1368, 0, 0 } ,
	{ 474, 1368, 0, 0 } ,
	{ 475, 1368, 0, 0 } ,
	{ 476, 1368, 0, 0 } ,
	{ 477, 1368, 0, 0 } ,
	{ 478, 1368, 0, 0 } ,
	{ 479, 1368, 0, 0 } ,
	{ 480, 1368, 0, 0 } ,
	{ 481, 1368, 0, 0 } ,
	{ 482, 1368, 0, 0 } ,
	{ 483, 1368, 0, 0 } ,
	{ 484, 1368, 0, 0 } ,
	{ 485, 1368, 0, 0 } ,
	{ 486, 1368, 0, 0 } ,
	{ 487, 1368, 0, 0 } ,
	{ 488, 1368, 0, 0 } ,
	{ 489, 1368, 0, 0 } ,
	{ 490, 1368, 0, 0 } ,
	{ 491, 1368, 0, 0 } ,
	{ 492, 1368, 0, 0 } ,
	{ 493, 1368, 0, 0 } ,
	{ 494, 1368, 0, 0 } ,
	{ 495, 1368, 0, 0 } ,
	{ 496, 1368, 0, 0 } ,
	{ 497, 1368, 0, 0 } ,
	{ 498, 1368, 0, 0 } ,
	{ 499, 1368, 0, 0 } ,
	{ 500, 1368, 0, 0 } ,
	{ 501, 1368, 0, 0 } ,
	{ 502, 1368, 0, 0 } ,
	{ 503, 1368, 0, 0 } ,
	{ 504, 1368, 0, 0 } ,
	{ 505, 1368, 0, 0 } ,
	{ 506, 1368, 0, 0 } ,
	{ 507, 1368, 0, 0 } ,
	{ 508, 1368, 0, 0 } ,
	{ 509, 1368, 0, 0 } ,
	{ 510, 1368, 0, 0 } ,
	{ 511, 1368, 0, 0 } ,
	{ 512, 1368, 0, 0 } ,
	{ 513, 1368, 0, 0 } ,
	{ 514, 1368, 0, 0 } ,
	{ 515, 1368, 0, 0 } ,
	{ 516, 1368, 0, 0 } ,
	{ 517, 1368, 0, 0 } ,
	{ 518, 1368, 0, 0 } ,
	{ 519, 1368, 0, 0 } ,
	{ 520, 1368, 0, 0 } ,
	{ 521, 1368, 0, 0 } ,
	{ 522, 1368, 0, 0 } ,
	{ 523, 1368, 0, 0 } ,
	{ 524, 1368, 0, 0 } ,
	{ 525, 1368, 0, 0 } ,
	{ 526, 1368, 0, 0 } ,
	{ 527, 1368, 0, 0 } ,
	{ 528, 1368, 0, 0 } ,
	{ 529, 1368, 0, 0 } ,
	{ 530, 1368, 0, 0 } ,
	{ 531, 1368, 0, 0 } ,
	{ 532, 1368, 0, 0 } ,
	{ 533, 1368, 0, 0 } ,
	{ 534, 1368, 0, 0 } ,
	{ 535, 1368, 0, 0 } ,
	{ 536, 1368, 0, 0 } ,
	{ 537, 1368, 0, 0 } ,
	{ 538, 1368, 0, 0 } ,
	{ 539, 1368, 0, 0 } ,
	{ 540, 1368, 0, 0 } ,
	{ 541, 1368, 0, 0 } ,
	{ 542, 1368, 0, 0 } ,
	{ 543, 1368, 0, 0 } ,
	{ 544, 1368, 0, 0 } ,
	{ 545, 1368, 0, 0 } ,
	{ 546, 1368, 0, 0 } ,
	{ 547, 1368, 0, 0 } ,
	{ 548, 1368, 0, 0 } ,
	{ 549, 1368, 0, 0 } ,
	{ 550, 1368, 0, 0 } ,
	{ 551, 1368, 0, 0 } ,
	{ 552, 1368, 0, 0 } ,
	{ 553, 1368, 0, 0 } ,
	{ 554, 1368, 0, 0 } ,
	{ 351, 1338, offsetof(InterpreterFactory_t600, ___mapping_0), 0 } ,
	{ 356, 1188, offsetof(InterpreterFactory_t600, ___pattern_1), 0 } ,
	{ 555, 811, offsetof(InterpreterFactory_t600, ___namesMapping_2), 0 } ,
	{ 342, 267, offsetof(InterpreterFactory_t600, ___gap_3), 0 } ,
	{ 556, 377, offsetof(Link_t601, ___base_addr_0) + sizeof(Object_t), 0 } ,
	{ 557, 377, offsetof(Link_t601, ___offset_addr_1) + sizeof(Object_t), 0 } ,
	{ 558, 1378, offsetof(PatternLinkStack_t602, ___link_1), 0 } ,
	{ 559, 1133, offsetof(PatternCompiler_t604, ___pgm_0), 0 } ,
	{ 560, 1382, offsetof(LinkStack_t603, ___stack_0), 0 } ,
	{ 397, 377, offsetof(Mark_t605, ___Start_0) + sizeof(Object_t), 0 } ,
	{ 401, 377, offsetof(Mark_t605, ___End_1) + sizeof(Object_t), 0 } ,
	{ 561, 377, offsetof(Mark_t605, ___Previous_2) + sizeof(Object_t), 0 } ,
	{ 562, 1339, offsetof(IntStack_t606, ___values_0) + sizeof(Object_t), 0 } ,
	{ 17, 267, offsetof(IntStack_t606, ___count_1) + sizeof(Object_t), 0 } ,
	{ 563, 267, offsetof(RepeatContext_t607, ___start_0), 0 } ,
	{ 564, 267, offsetof(RepeatContext_t607, ___min_1), 0 } ,
	{ 565, 267, offsetof(RepeatContext_t607, ___max_2), 0 } ,
	{ 566, 402, offsetof(RepeatContext_t607, ___lazy_3), 0 } ,
	{ 567, 267, offsetof(RepeatContext_t607, ___expr_pc_4), 0 } ,
	{ 410, 1386, offsetof(RepeatContext_t607, ___previous_5), 0 } ,
	{ 17, 267, offsetof(RepeatContext_t607, ___count_6), 0 } ,
	{ 36, 259, offsetof(Mode_t608, ___value___1) + sizeof(Object_t), 0 } ,
	{ 568, 1388, 0, 0 } ,
	{ 569, 1388, 0, 0 } ,
	{ 570, 1388, 0, 0 } ,
	{ 571, 1188, offsetof(Interpreter_t611, ___program_1), 0 } ,
	{ 572, 267, offsetof(Interpreter_t611, ___program_start_2), 0 } ,
	{ 338, 415, offsetof(Interpreter_t611, ___text_3), 0 } ,
	{ 573, 267, offsetof(Interpreter_t611, ___text_end_4), 0 } ,
	{ 352, 267, offsetof(Interpreter_t611, ___group_count_5), 0 } ,
	{ 574, 267, offsetof(Interpreter_t611, ___match_min_6), 0 } ,
	{ 575, 1391, offsetof(Interpreter_t611, ___qs_7), 0 } ,
	{ 576, 267, offsetof(Interpreter_t611, ___scan_ptr_8), 0 } ,
	{ 577, 1386, offsetof(Interpreter_t611, ___repeat_9), 0 } ,
	{ 578, 1386, offsetof(Interpreter_t611, ___fast_10), 0 } ,
	{ 560, 1392, offsetof(Interpreter_t611, ___stack_11), 0 } ,
	{ 579, 1386, offsetof(Interpreter_t611, ___deep_12), 0 } ,
	{ 580, 1393, offsetof(Interpreter_t611, ___marks_13), 0 } ,
	{ 581, 267, offsetof(Interpreter_t611, ___mark_start_14), 0 } ,
	{ 582, 267, offsetof(Interpreter_t611, ___mark_end_15), 0 } ,
	{ 346, 1339, offsetof(Interpreter_t611, ___groups_16), 0 } ,
	{ 583, 377, offsetof(Interval_t612, ___low_0) + sizeof(Object_t), 0 } ,
	{ 584, 377, offsetof(Interval_t612, ___high_1) + sizeof(Object_t), 0 } ,
	{ 585, 349, offsetof(Interval_t612, ___contiguous_2) + sizeof(Object_t), 0 } ,
	{ 10, 1396, offsetof(Enumerator_t613, ___list_0), 0 } ,
	{ 586, 267, offsetof(Enumerator_t613, ___ptr_1), 0 } ,
	{ 587, 1133, offsetof(IntervalCollection_t615, ___intervals_0), 0 } ,
	{ 356, 415, offsetof(Parser_t616, ___pattern_0), 0 } ,
	{ 586, 267, offsetof(Parser_t616, ___ptr_1), 0 } ,
	{ 359, 1133, offsetof(Parser_t616, ___caps_2), 0 } ,
	{ 588, 1116, offsetof(Parser_t616, ___refs_3), 0 } ,
	{ 589, 267, offsetof(Parser_t616, ___num_groups_4), 0 } ,
	{ 342, 267, offsetof(Parser_t616, ___gap_5), 0 } ,
	{ 590, 415, offsetof(QuickSearch_t609, ___str_0), 0 } ,
	{ 591, 267, offsetof(QuickSearch_t609, ___len_1), 0 } ,
	{ 592, 402, offsetof(QuickSearch_t609, ___ignore_2), 0 } ,
	{ 593, 402, offsetof(QuickSearch_t609, ___reverse_3), 0 } ,
	{ 594, 481, offsetof(QuickSearch_t609, ___shift_4), 0 } ,
	{ 595, 1116, offsetof(QuickSearch_t609, ___shiftExtended_5), 0 } ,
	{ 596, 1402, offsetof(QuickSearch_t609_StaticFields, ___THRESHOLD_6), 0 } ,
	{ 343, 1327, offsetof(ReplacementEvaluator_t617, ___regex_0), 0 } ,
	{ 597, 267, offsetof(ReplacementEvaluator_t617, ___n_pieces_1), 0 } ,
	{ 598, 1339, offsetof(ReplacementEvaluator_t617, ___pieces_2), 0 } ,
	{ 599, 415, offsetof(ReplacementEvaluator_t617, ___replacement_3), 0 } ,
	{ 600, 1407, offsetof(CompositeExpression_t620, ___expressions_0), 0 } ,
	{ 352, 267, offsetof(RegularExpression_t622, ___group_count_1), 0 } ,
	{ 601, 267, offsetof(CapturingGroup_t623, ___gid_1), 0 } ,
	{ 181, 415, offsetof(CapturingGroup_t623, ___name_2), 0 } ,
	{ 602, 1413, offsetof(BalancingGroup_t624, ___balance_3), 0 } ,
	{ 564, 267, offsetof(Repetition_t626, ___min_1), 0 } ,
	{ 565, 267, offsetof(Repetition_t626, ___max_2), 0 } ,
	{ 566, 402, offsetof(Repetition_t626, ___lazy_3), 0 } ,
	{ 603, 1418, offsetof(CaptureAssertion_t630, ___alternate_1), 0 } ,
	{ 604, 1413, offsetof(CaptureAssertion_t630, ___group_2), 0 } ,
	{ 605, 1419, offsetof(CaptureAssertion_t630, ___literal_3), 0 } ,
	{ 593, 402, offsetof(ExpressionAssertion_t628, ___reverse_1), 0 } ,
	{ 606, 402, offsetof(ExpressionAssertion_t628, ___negate_2), 0 } ,
	{ 590, 415, offsetof(Literal_t629, ___str_0), 0 } ,
	{ 592, 402, offsetof(Literal_t629, ___ignore_1), 0 } ,
	{ 607, 1424, offsetof(PositionAssertion_t632, ___pos_0), 0 } ,
	{ 604, 1413, offsetof(Reference_t633, ___group_0), 0 } ,
	{ 592, 402, offsetof(Reference_t633, ___ignore_1), 0 } ,
	{ 605, 415, offsetof(BackslashNumber_t634, ___literal_2), 0 } ,
	{ 608, 402, offsetof(BackslashNumber_t634, ___ecma_3), 0 } ,
	{ 609, 1428, offsetof(CharacterClass_t636_StaticFields, ___upper_case_characters_0), 0 } ,
	{ 606, 402, offsetof(CharacterClass_t636, ___negate_1), 0 } ,
	{ 592, 402, offsetof(CharacterClass_t636, ___ignore_2), 0 } ,
	{ 610, 1429, offsetof(CharacterClass_t636, ___pos_cats_3), 0 } ,
	{ 611, 1429, offsetof(CharacterClass_t636, ___neg_cats_4), 0 } ,
	{ 587, 1430, offsetof(CharacterClass_t636, ___intervals_5), 0 } ,
	{ 612, 1432, offsetof(AnchorInfo_t637, ___expr_0), 0 } ,
	{ 607, 1424, offsetof(AnchorInfo_t637, ___pos_1), 0 } ,
	{ 613, 267, offsetof(AnchorInfo_t637, ___offset_2), 0 } ,
	{ 590, 415, offsetof(AnchorInfo_t637, ___str_3), 0 } ,
	{ 614, 267, offsetof(AnchorInfo_t637, ___width_4), 0 } ,
	{ 592, 402, offsetof(AnchorInfo_t637, ___ignore_5), 0 } ,
	{ 615, 486, offsetof(UriScheme_t641, ___scheme_0) + sizeof(Object_t), 0 } ,
	{ 616, 486, offsetof(UriScheme_t641, ___delimiter_1) + sizeof(Object_t), 0 } ,
	{ 617, 377, offsetof(UriScheme_t641, ___defaultPort_2) + sizeof(Object_t), 0 } ,
	{ 618, 819, 0, 0 } ,
	{ 619, 402, offsetof(Uri_t184, ___isUnixFilePath_1), 0 } ,
	{ 620, 415, offsetof(Uri_t184, ___source_2), 0 } ,
	{ 615, 415, offsetof(Uri_t184, ___scheme_3), 0 } ,
	{ 621, 415, offsetof(Uri_t184, ___host_4), 0 } ,
	{ 622, 267, offsetof(Uri_t184, ___port_5), 0 } ,
	{ 623, 415, offsetof(Uri_t184, ___path_6), 0 } ,
	{ 624, 415, offsetof(Uri_t184, ___query_7), 0 } ,
	{ 625, 415, offsetof(Uri_t184, ___fragment_8), 0 } ,
	{ 626, 415, offsetof(Uri_t184, ___userinfo_9), 0 } ,
	{ 627, 402, offsetof(Uri_t184, ___isUnc_10), 0 } ,
	{ 628, 402, offsetof(Uri_t184, ___isOpaquePart_11), 0 } ,
	{ 629, 402, offsetof(Uri_t184, ___isAbsoluteUri_12), 0 } ,
	{ 630, 811, offsetof(Uri_t184, ___segments_13), 0 } ,
	{ 631, 402, offsetof(Uri_t184, ___userEscaped_14), 0 } ,
	{ 632, 415, offsetof(Uri_t184, ___cachedAbsoluteUri_15), 0 } ,
	{ 633, 415, offsetof(Uri_t184, ___cachedToString_16), 0 } ,
	{ 634, 415, offsetof(Uri_t184, ___cachedLocalPath_17), 0 } ,
	{ 635, 267, offsetof(Uri_t184, ___cachedHashCode_18), 0 } ,
	{ 636, 1442, offsetof(Uri_t184_StaticFields, ___hexUpperChars_19), 0 } ,
	{ 637, 1443, offsetof(Uri_t184_StaticFields, ___SchemeDelimiter_20), 0 } ,
	{ 638, 1443, offsetof(Uri_t184_StaticFields, ___UriSchemeFile_21), 0 } ,
	{ 639, 1443, offsetof(Uri_t184_StaticFields, ___UriSchemeFtp_22), 0 } ,
	{ 640, 1443, offsetof(Uri_t184_StaticFields, ___UriSchemeGopher_23), 0 } ,
	{ 641, 1443, offsetof(Uri_t184_StaticFields, ___UriSchemeHttp_24), 0 } ,
	{ 642, 1443, offsetof(Uri_t184_StaticFields, ___UriSchemeHttps_25), 0 } ,
	{ 643, 1443, offsetof(Uri_t184_StaticFields, ___UriSchemeMailto_26), 0 } ,
	{ 644, 1443, offsetof(Uri_t184_StaticFields, ___UriSchemeNews_27), 0 } ,
	{ 645, 1443, offsetof(Uri_t184_StaticFields, ___UriSchemeNntp_28), 0 } ,
	{ 646, 1443, offsetof(Uri_t184_StaticFields, ___UriSchemeNetPipe_29), 0 } ,
	{ 647, 1443, offsetof(Uri_t184_StaticFields, ___UriSchemeNetTcp_30), 0 } ,
	{ 648, 1444, offsetof(Uri_t184_StaticFields, ___schemes_31), 0 } ,
	{ 649, 1445, offsetof(Uri_t184, ___parser_32), 0 } ,
	{ 650, 436, offsetof(Uri_t184_StaticFields, ___U3CU3Ef__switchU24map12_33), 65 } ,
	{ 651, 436, offsetof(Uri_t184_StaticFields, ___U3CU3Ef__switchU24map13_34), 66 } ,
	{ 652, 436, offsetof(Uri_t184_StaticFields, ___U3CU3Ef__switchU24map14_35), 67 } ,
	{ 653, 436, offsetof(Uri_t184_StaticFields, ___U3CU3Ef__switchU24map15_36), 68 } ,
	{ 654, 436, offsetof(Uri_t184_StaticFields, ___U3CU3Ef__switchU24map16_37), 69 } ,
	{ 36, 259, offsetof(UriHostNameType_t644, ___value___1) + sizeof(Object_t), 0 } ,
	{ 48, 1448, 0, 0 } ,
	{ 655, 1448, 0, 0 } ,
	{ 656, 1448, 0, 0 } ,
	{ 657, 1448, 0, 0 } ,
	{ 658, 1448, 0, 0 } ,
	{ 36, 259, offsetof(UriKind_t645, ___value___1) + sizeof(Object_t), 0 } ,
	{ 659, 1450, 0, 0 } ,
	{ 660, 1450, 0, 0 } ,
	{ 661, 1450, 0, 0 } ,
	{ 662, 1453, offsetof(UriParser_t639_StaticFields, ___lock_object_0), 0 } ,
	{ 663, 1454, offsetof(UriParser_t639_StaticFields, ___table_1), 0 } ,
	{ 664, 254, offsetof(UriParser_t639, ___scheme_name_2), 0 } ,
	{ 665, 267, offsetof(UriParser_t639, ___default_port_3), 0 } ,
	{ 666, 1455, offsetof(UriParser_t639_StaticFields, ___uri_regex_4), 0 } ,
	{ 667, 1455, offsetof(UriParser_t639_StaticFields, ___auth_regex_5), 0 } ,
	{ 36, 259, offsetof(UriPartial_t646, ___value___1) + sizeof(Object_t), 0 } ,
	{ 668, 1457, 0, 0 } ,
	{ 669, 1457, 0, 0 } ,
	{ 670, 1457, 0, 0 } ,
	{ 671, 1457, 0, 0 } ,
	{ 672, 1466, offsetof(U3CPrivateImplementationDetailsU3E_t651_StaticFields, ___U24U24fieldU2D2_0), 0 } ,
	{ 673, 1467, offsetof(U3CPrivateImplementationDetailsU3E_t651_StaticFields, ___U24U24fieldU2D3_1), 0 } ,
	{ 674, 1467, offsetof(U3CPrivateImplementationDetailsU3E_t651_StaticFields, ___U24U24fieldU2D4_2), 0 } ,
};
#ifdef __clang__
#pragma clang diagnostic pop
#endif
static const Il2CppFieldDefaultValue s_DefaultValues[371] = 
{
	{ 43, 25, 0 },
	{ 44, 25, 4 },
	{ 45, 25, 8 },
	{ 49, 25, 12 },
	{ 50, 25, 16 },
	{ 51, 25, 20 },
	{ 53, 25, 24 },
	{ 54, 25, 28 },
	{ 55, 25, 32 },
	{ 56, 25, 36 },
	{ 58, 25, 40 },
	{ 59, 25, 44 },
	{ 60, 25, 48 },
	{ 61, 25, 52 },
	{ 62, 25, 56 },
	{ 63, 25, 60 },
	{ 64, 25, 64 },
	{ 65, 25, 68 },
	{ 66, 25, 72 },
	{ 67, 25, 76 },
	{ 68, 25, 80 },
	{ 69, 25, 84 },
	{ 70, 25, 88 },
	{ 71, 25, 92 },
	{ 72, 25, 96 },
	{ 73, 25, 100 },
	{ 74, 25, 104 },
	{ 75, 25, 108 },
	{ 76, 25, 112 },
	{ 77, 25, 116 },
	{ 78, 25, 120 },
	{ 79, 25, 124 },
	{ 80, 25, 128 },
	{ 81, 25, 132 },
	{ 82, 25, 136 },
	{ 83, 25, 140 },
	{ 84, 25, 144 },
	{ 85, 25, 148 },
	{ 86, 25, 152 },
	{ 87, 25, 156 },
	{ 88, 25, 160 },
	{ 152, 25, 164 },
	{ 153, 25, 168 },
	{ 193, 25, 172 },
	{ 194, 25, 176 },
	{ 195, 25, 180 },
	{ 196, 25, 184 },
	{ 197, 25, 188 },
	{ 204, 25, 192 },
	{ 205, 25, 196 },
	{ 207, 25, 200 },
	{ 208, 25, 204 },
	{ 209, 25, 208 },
	{ 210, 25, 212 },
	{ 211, 25, 216 },
	{ 212, 25, 220 },
	{ 213, 25, 224 },
	{ 214, 25, 228 },
	{ 217, 25, 232 },
	{ 218, 25, 236 },
	{ 219, 25, 240 },
	{ 220, 25, 244 },
	{ 221, 25, 248 },
	{ 222, 25, 252 },
	{ 223, 25, 256 },
	{ 224, 25, 260 },
	{ 225, 25, 264 },
	{ 226, 25, 268 },
	{ 227, 15, 272 },
	{ 228, 15, 285 },
	{ 280, 25, 306 },
	{ 281, 25, 310 },
	{ 282, 25, 314 },
	{ 283, 25, 318 },
	{ 284, 25, 322 },
	{ 285, 25, 326 },
	{ 286, 25, 330 },
	{ 287, 25, 334 },
	{ 288, 25, 338 },
	{ 289, 25, 342 },
	{ 290, 25, 346 },
	{ 291, 25, 350 },
	{ 292, 25, 354 },
	{ 293, 25, 358 },
	{ 294, 25, 362 },
	{ 295, 25, 366 },
	{ 296, 25, 370 },
	{ 297, 25, 374 },
	{ 298, 25, 378 },
	{ 299, 25, 382 },
	{ 300, 25, 386 },
	{ 301, 25, 390 },
	{ 302, 25, 394 },
	{ 310, 25, 398 },
	{ 311, 25, 402 },
	{ 312, 25, 406 },
	{ 313, 25, 410 },
	{ 314, 25, 414 },
	{ 315, 25, 418 },
	{ 316, 25, 422 },
	{ 317, 25, 426 },
	{ 318, 25, 430 },
	{ 319, 25, 434 },
	{ 320, 25, 438 },
	{ 321, 25, 442 },
	{ 322, 25, 446 },
	{ 323, 25, 450 },
	{ 324, 25, 454 },
	{ 325, 15, 458 },
	{ 326, 15, 471 },
	{ 327, 25, 484 },
	{ 331, 25, 488 },
	{ 332, 25, 492 },
	{ 333, 25, 496 },
	{ 334, 25, 500 },
	{ 335, 25, 504 },
	{ 336, 25, 508 },
	{ 337, 25, 512 },
	{ 338, 25, 516 },
	{ 339, 25, 520 },
	{ 340, 25, 524 },
	{ 342, 25, 528 },
	{ 343, 25, 532 },
	{ 344, 25, 536 },
	{ 345, 25, 540 },
	{ 346, 25, 544 },
	{ 347, 25, 548 },
	{ 349, 25, 552 },
	{ 350, 25, 556 },
	{ 351, 25, 560 },
	{ 353, 25, 564 },
	{ 354, 25, 568 },
	{ 355, 25, 572 },
	{ 362, 15, 576 },
	{ 363, 15, 589 },
	{ 368, 25, 615 },
	{ 369, 25, 619 },
	{ 370, 25, 623 },
	{ 372, 25, 627 },
	{ 373, 25, 631 },
	{ 374, 25, 635 },
	{ 375, 25, 639 },
	{ 376, 25, 643 },
	{ 377, 25, 647 },
	{ 378, 25, 651 },
	{ 379, 25, 655 },
	{ 380, 25, 659 },
	{ 381, 25, 663 },
	{ 382, 25, 667 },
	{ 383, 25, 671 },
	{ 384, 25, 675 },
	{ 385, 25, 679 },
	{ 387, 25, 683 },
	{ 388, 25, 687 },
	{ 389, 25, 691 },
	{ 390, 25, 695 },
	{ 391, 25, 699 },
	{ 392, 25, 703 },
	{ 437, 25, 707 },
	{ 438, 25, 711 },
	{ 439, 25, 715 },
	{ 440, 25, 719 },
	{ 441, 25, 723 },
	{ 442, 25, 727 },
	{ 443, 25, 731 },
	{ 444, 25, 735 },
	{ 445, 25, 739 },
	{ 447, 148, 743 },
	{ 448, 148, 745 },
	{ 449, 148, 747 },
	{ 450, 148, 749 },
	{ 451, 148, 751 },
	{ 452, 148, 753 },
	{ 453, 148, 755 },
	{ 454, 148, 757 },
	{ 455, 148, 759 },
	{ 456, 148, 761 },
	{ 457, 148, 763 },
	{ 458, 148, 765 },
	{ 459, 148, 767 },
	{ 460, 148, 769 },
	{ 461, 148, 771 },
	{ 462, 148, 773 },
	{ 463, 148, 775 },
	{ 464, 148, 777 },
	{ 465, 148, 779 },
	{ 466, 148, 781 },
	{ 467, 148, 783 },
	{ 468, 148, 785 },
	{ 469, 148, 787 },
	{ 470, 148, 789 },
	{ 471, 148, 791 },
	{ 473, 148, 793 },
	{ 474, 148, 795 },
	{ 475, 148, 797 },
	{ 476, 148, 799 },
	{ 477, 148, 801 },
	{ 479, 148, 803 },
	{ 480, 148, 805 },
	{ 481, 148, 807 },
	{ 482, 148, 809 },
	{ 483, 148, 811 },
	{ 484, 148, 813 },
	{ 485, 148, 815 },
	{ 486, 148, 817 },
	{ 487, 148, 819 },
	{ 488, 148, 821 },
	{ 500, 148, 823 },
	{ 501, 148, 825 },
	{ 502, 148, 827 },
	{ 503, 148, 829 },
	{ 504, 148, 831 },
	{ 505, 148, 833 },
	{ 506, 148, 835 },
	{ 507, 148, 837 },
	{ 508, 148, 839 },
	{ 509, 148, 841 },
	{ 510, 148, 843 },
	{ 511, 148, 845 },
	{ 512, 148, 847 },
	{ 513, 148, 849 },
	{ 514, 148, 851 },
	{ 515, 148, 853 },
	{ 516, 148, 855 },
	{ 517, 148, 857 },
	{ 518, 148, 859 },
	{ 519, 148, 861 },
	{ 520, 148, 863 },
	{ 521, 148, 865 },
	{ 522, 148, 867 },
	{ 523, 148, 869 },
	{ 524, 148, 871 },
	{ 525, 148, 873 },
	{ 526, 148, 875 },
	{ 527, 148, 877 },
	{ 528, 148, 879 },
	{ 529, 148, 881 },
	{ 530, 148, 883 },
	{ 531, 148, 885 },
	{ 532, 148, 887 },
	{ 533, 148, 889 },
	{ 534, 148, 891 },
	{ 535, 148, 893 },
	{ 536, 148, 895 },
	{ 537, 148, 897 },
	{ 538, 148, 899 },
	{ 539, 148, 901 },
	{ 540, 148, 903 },
	{ 541, 148, 905 },
	{ 542, 148, 907 },
	{ 543, 148, 909 },
	{ 544, 148, 911 },
	{ 545, 148, 913 },
	{ 546, 148, 915 },
	{ 547, 148, 917 },
	{ 548, 148, 919 },
	{ 549, 148, 921 },
	{ 550, 148, 923 },
	{ 551, 148, 925 },
	{ 552, 148, 927 },
	{ 553, 148, 929 },
	{ 554, 148, 931 },
	{ 555, 148, 933 },
	{ 556, 148, 935 },
	{ 557, 148, 937 },
	{ 558, 148, 939 },
	{ 559, 148, 941 },
	{ 560, 148, 943 },
	{ 561, 148, 945 },
	{ 562, 148, 947 },
	{ 563, 148, 949 },
	{ 564, 148, 951 },
	{ 565, 148, 953 },
	{ 566, 148, 955 },
	{ 567, 148, 957 },
	{ 568, 148, 959 },
	{ 569, 148, 961 },
	{ 570, 148, 963 },
	{ 571, 148, 965 },
	{ 572, 148, 967 },
	{ 573, 148, 969 },
	{ 574, 148, 971 },
	{ 575, 148, 973 },
	{ 576, 148, 975 },
	{ 577, 148, 977 },
	{ 578, 148, 979 },
	{ 579, 148, 981 },
	{ 580, 148, 983 },
	{ 581, 148, 985 },
	{ 582, 148, 987 },
	{ 583, 148, 989 },
	{ 584, 148, 991 },
	{ 585, 148, 993 },
	{ 586, 148, 995 },
	{ 587, 148, 997 },
	{ 588, 148, 999 },
	{ 589, 148, 1001 },
	{ 590, 148, 1003 },
	{ 591, 148, 1005 },
	{ 592, 148, 1007 },
	{ 593, 148, 1009 },
	{ 594, 148, 1011 },
	{ 595, 148, 1013 },
	{ 596, 148, 1015 },
	{ 597, 148, 1017 },
	{ 598, 148, 1019 },
	{ 599, 148, 1021 },
	{ 600, 148, 1023 },
	{ 601, 148, 1025 },
	{ 602, 148, 1027 },
	{ 603, 148, 1029 },
	{ 604, 148, 1031 },
	{ 605, 148, 1033 },
	{ 606, 148, 1035 },
	{ 607, 148, 1037 },
	{ 608, 148, 1039 },
	{ 609, 148, 1041 },
	{ 610, 148, 1043 },
	{ 611, 148, 1045 },
	{ 612, 148, 1047 },
	{ 613, 148, 1049 },
	{ 614, 148, 1051 },
	{ 615, 148, 1053 },
	{ 616, 148, 1055 },
	{ 617, 148, 1057 },
	{ 618, 148, 1059 },
	{ 619, 148, 1061 },
	{ 620, 148, 1063 },
	{ 621, 148, 1065 },
	{ 622, 148, 1067 },
	{ 623, 148, 1069 },
	{ 624, 148, 1071 },
	{ 625, 148, 1073 },
	{ 626, 148, 1075 },
	{ 627, 148, 1077 },
	{ 628, 148, 1079 },
	{ 629, 148, 1081 },
	{ 630, 148, 1083 },
	{ 631, 148, 1085 },
	{ 632, 148, 1087 },
	{ 633, 148, 1089 },
	{ 634, 148, 1091 },
	{ 635, 148, 1093 },
	{ 636, 148, 1095 },
	{ 637, 148, 1097 },
	{ 638, 148, 1099 },
	{ 639, 148, 1101 },
	{ 640, 148, 1103 },
	{ 641, 148, 1105 },
	{ 642, 148, 1107 },
	{ 643, 148, 1109 },
	{ 644, 148, 1111 },
	{ 667, 25, 1113 },
	{ 668, 25, 1117 },
	{ 669, 25, 1121 },
	{ 744, 25, 1125 },
	{ 783, 25, 1129 },
	{ 784, 25, 1133 },
	{ 785, 25, 1137 },
	{ 786, 25, 1141 },
	{ 787, 25, 1145 },
	{ 789, 25, 1149 },
	{ 790, 25, 1153 },
	{ 791, 25, 1157 },
	{ 799, 25, 1161 },
	{ 800, 25, 1165 },
	{ 801, 25, 1169 },
	{ 802, 25, 1173 },
	{ 803, 1462, 1177 },
	{ 804, 1464, 1305 },
	{ 805, 1464, 1317 },
};
static const uint8_t s_DefaultValueDataTable[1329] = 
{
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0xFF,
	0xFF,
	0xFF,
	0xFF,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x03,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x05,
	0x00,
	0x00,
	0x00,
	0x06,
	0x00,
	0x00,
	0x00,
	0x06,
	0x00,
	0x00,
	0x00,
	0x07,
	0x00,
	0x00,
	0x00,
	0x07,
	0x00,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x09,
	0x00,
	0x00,
	0x00,
	0x0A,
	0x00,
	0x00,
	0x00,
	0x0B,
	0x00,
	0x00,
	0x00,
	0x0C,
	0x00,
	0x00,
	0x00,
	0x0D,
	0x00,
	0x00,
	0x00,
	0x0E,
	0x00,
	0x00,
	0x00,
	0x0F,
	0x00,
	0x00,
	0x00,
	0x10,
	0x00,
	0x00,
	0x00,
	0x11,
	0x00,
	0x00,
	0x00,
	0x12,
	0x00,
	0x00,
	0x00,
	0x13,
	0x00,
	0x00,
	0x00,
	0x15,
	0x00,
	0x00,
	0x00,
	0x16,
	0x00,
	0x00,
	0x00,
	0x17,
	0x00,
	0x00,
	0x00,
	0x18,
	0x00,
	0x00,
	0x00,
	0x19,
	0x00,
	0x00,
	0x00,
	0x1A,
	0x00,
	0x00,
	0x00,
	0x1C,
	0x00,
	0x00,
	0x00,
	0x1D,
	0x00,
	0x00,
	0x00,
	0x30,
	0x00,
	0x00,
	0x00,
	0xC0,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x03,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x05,
	0x00,
	0x00,
	0x00,
	0x06,
	0x00,
	0x00,
	0x00,
	0x07,
	0x00,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x10,
	0x00,
	0x00,
	0x00,
	0x20,
	0x00,
	0x00,
	0x00,
	0x40,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x10,
	0x00,
	0x00,
	0x00,
	0x20,
	0x00,
	0x00,
	0x00,
	0x40,
	0x00,
	0x00,
	0x09,
	0x00,
	0x00,
	0x00,
	0x32,
	0x2E,
	0x35,
	0x2E,
	0x32,
	0x39,
	0x2E,
	0x31,
	0x39,
	0x11,
	0x00,
	0x00,
	0x00,
	0x42,
	0x61,
	0x73,
	0x69,
	0x63,
	0x20,
	0x43,
	0x6F,
	0x6E,
	0x73,
	0x74,
	0x72,
	0x61,
	0x69,
	0x6E,
	0x74,
	0x73,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x10,
	0x00,
	0x00,
	0x00,
	0x20,
	0x00,
	0x00,
	0x00,
	0x40,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x10,
	0x00,
	0x00,
	0x00,
	0x20,
	0x00,
	0x00,
	0x00,
	0x40,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x03,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x05,
	0x00,
	0x00,
	0x00,
	0x06,
	0x00,
	0x00,
	0x00,
	0x07,
	0x00,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x09,
	0x00,
	0x00,
	0x00,
	0x0A,
	0x00,
	0x00,
	0x00,
	0x0B,
	0x00,
	0x00,
	0x00,
	0x0C,
	0x00,
	0x00,
	0x00,
	0x0D,
	0x00,
	0x00,
	0x00,
	0x0E,
	0x00,
	0x00,
	0x00,
	0x09,
	0x00,
	0x00,
	0x00,
	0x32,
	0x2E,
	0x35,
	0x2E,
	0x32,
	0x39,
	0x2E,
	0x31,
	0x35,
	0x09,
	0x00,
	0x00,
	0x00,
	0x4B,
	0x65,
	0x79,
	0x20,
	0x55,
	0x73,
	0x61,
	0x67,
	0x65,
	0xFF,
	0x80,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x10,
	0x00,
	0x00,
	0x00,
	0x20,
	0x00,
	0x00,
	0x00,
	0x40,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x03,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x05,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x09,
	0x00,
	0x00,
	0x00,
	0x32,
	0x2E,
	0x35,
	0x2E,
	0x32,
	0x39,
	0x2E,
	0x31,
	0x34,
	0x16,
	0x00,
	0x00,
	0x00,
	0x53,
	0x75,
	0x62,
	0x6A,
	0x65,
	0x63,
	0x74,
	0x20,
	0x4B,
	0x65,
	0x79,
	0x20,
	0x49,
	0x64,
	0x65,
	0x6E,
	0x74,
	0x69,
	0x66,
	0x69,
	0x65,
	0x72,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x10,
	0x00,
	0x00,
	0x00,
	0x20,
	0x00,
	0x00,
	0x00,
	0x40,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0xFF,
	0x0F,
	0x00,
	0x00,
	0xFF,
	0xFF,
	0xFF,
	0xFF,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x03,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x10,
	0x00,
	0x00,
	0x00,
	0x20,
	0x00,
	0x00,
	0x00,
	0x40,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x02,
	0x00,
	0x03,
	0x00,
	0x04,
	0x00,
	0x05,
	0x00,
	0x06,
	0x00,
	0x07,
	0x00,
	0x08,
	0x00,
	0x09,
	0x00,
	0x0A,
	0x00,
	0x0B,
	0x00,
	0x0C,
	0x00,
	0x0D,
	0x00,
	0x0E,
	0x00,
	0x0F,
	0x00,
	0x10,
	0x00,
	0x11,
	0x00,
	0x12,
	0x00,
	0x13,
	0x00,
	0x14,
	0x00,
	0x15,
	0x00,
	0x16,
	0x00,
	0x17,
	0x00,
	0x18,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x02,
	0x00,
	0x04,
	0x00,
	0x08,
	0x00,
	0x00,
	0x01,
	0x00,
	0x02,
	0x00,
	0x03,
	0x00,
	0x04,
	0x00,
	0x05,
	0x00,
	0x06,
	0x00,
	0x07,
	0x00,
	0x08,
	0x00,
	0x09,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x02,
	0x00,
	0x03,
	0x00,
	0x04,
	0x00,
	0x05,
	0x00,
	0x06,
	0x00,
	0x07,
	0x00,
	0x08,
	0x00,
	0x09,
	0x00,
	0x0A,
	0x00,
	0x0B,
	0x00,
	0x0C,
	0x00,
	0x0D,
	0x00,
	0x0E,
	0x00,
	0x0F,
	0x00,
	0x10,
	0x00,
	0x11,
	0x00,
	0x12,
	0x00,
	0x13,
	0x00,
	0x14,
	0x00,
	0x15,
	0x00,
	0x16,
	0x00,
	0x17,
	0x00,
	0x18,
	0x00,
	0x19,
	0x00,
	0x1A,
	0x00,
	0x1B,
	0x00,
	0x1C,
	0x00,
	0x1D,
	0x00,
	0x1E,
	0x00,
	0x1F,
	0x00,
	0x20,
	0x00,
	0x21,
	0x00,
	0x22,
	0x00,
	0x23,
	0x00,
	0x24,
	0x00,
	0x25,
	0x00,
	0x26,
	0x00,
	0x27,
	0x00,
	0x28,
	0x00,
	0x29,
	0x00,
	0x2A,
	0x00,
	0x2B,
	0x00,
	0x2C,
	0x00,
	0x2D,
	0x00,
	0x2E,
	0x00,
	0x2F,
	0x00,
	0x30,
	0x00,
	0x31,
	0x00,
	0x32,
	0x00,
	0x33,
	0x00,
	0x34,
	0x00,
	0x35,
	0x00,
	0x36,
	0x00,
	0x37,
	0x00,
	0x38,
	0x00,
	0x39,
	0x00,
	0x3A,
	0x00,
	0x3B,
	0x00,
	0x3C,
	0x00,
	0x3D,
	0x00,
	0x3E,
	0x00,
	0x3F,
	0x00,
	0x40,
	0x00,
	0x41,
	0x00,
	0x42,
	0x00,
	0x43,
	0x00,
	0x44,
	0x00,
	0x45,
	0x00,
	0x46,
	0x00,
	0x47,
	0x00,
	0x48,
	0x00,
	0x49,
	0x00,
	0x4A,
	0x00,
	0x4B,
	0x00,
	0x4C,
	0x00,
	0x4D,
	0x00,
	0x4E,
	0x00,
	0x4F,
	0x00,
	0x50,
	0x00,
	0x51,
	0x00,
	0x52,
	0x00,
	0x53,
	0x00,
	0x54,
	0x00,
	0x55,
	0x00,
	0x56,
	0x00,
	0x57,
	0x00,
	0x58,
	0x00,
	0x59,
	0x00,
	0x5A,
	0x00,
	0x5B,
	0x00,
	0x5C,
	0x00,
	0x5D,
	0x00,
	0x5E,
	0x00,
	0x5F,
	0x00,
	0x60,
	0x00,
	0x61,
	0x00,
	0x62,
	0x00,
	0x63,
	0x00,
	0x64,
	0x00,
	0x65,
	0x00,
	0x66,
	0x00,
	0x67,
	0x00,
	0x68,
	0x00,
	0x69,
	0x00,
	0x6A,
	0x00,
	0x6B,
	0x00,
	0x6C,
	0x00,
	0x6D,
	0x00,
	0x6E,
	0x00,
	0x6F,
	0x00,
	0x70,
	0x00,
	0x71,
	0x00,
	0x72,
	0x00,
	0x73,
	0x00,
	0x74,
	0x00,
	0x75,
	0x00,
	0x76,
	0x00,
	0x77,
	0x00,
	0x78,
	0x00,
	0x79,
	0x00,
	0x7A,
	0x00,
	0x7B,
	0x00,
	0x7C,
	0x00,
	0x7D,
	0x00,
	0x7E,
	0x00,
	0x7F,
	0x00,
	0x80,
	0x00,
	0x81,
	0x00,
	0x82,
	0x00,
	0x83,
	0x00,
	0x84,
	0x00,
	0x85,
	0x00,
	0x86,
	0x00,
	0x87,
	0x00,
	0x88,
	0x00,
	0x89,
	0x00,
	0x8A,
	0x00,
	0x8B,
	0x00,
	0x8C,
	0x00,
	0x8D,
	0x00,
	0x8E,
	0x00,
	0x8F,
	0x00,
	0x90,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0xFE,
	0x7F,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x03,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x03,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x01,
	0x01,
	0x01,
	0x01,
	0x00,
	0x00,
	0x00,
	0x01,
	0x01,
	0x00,
	0x01,
	0x01,
	0x00,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x00,
	0x00,
	0x00,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x2A,
	0x86,
	0x48,
	0x86,
	0xF7,
	0x0D,
	0x01,
	0x09,
	0x01,
	0x00,
	0x00,
	0x00,
	0x2A,
	0x86,
	0x48,
	0x86,
	0xF7,
	0x0D,
	0x01,
	0x07,
	0x02,
	0x00,
	0x00,
	0x00,
};
Il2CppImage g_System_dll_Image = 
{
	 "System.dll" ,
	&g_System_Assembly,
	g_System_Assembly_Types,
	158,
	NULL,
	s_StringTable,
	675,
	s_FieldTable,
	806,
	s_DefaultValues,
	371,
	s_DefaultValueDataTable,
	1329,
	75,
	NULL,
	g_System_Assembly_AttributeGenerators,
};
